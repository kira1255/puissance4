var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.456,1,0.938]],["body/components/AppComponent.html",[0,0.839,1,1.663,2,1.866,3,0.295,4,0.295,5,2.292,6,1.571,7,1.571,8,1.571,9,0.244,10,2.847,11,0.728,12,2.513,13,1.571,14,1.851,15,3.727,16,2.056,17,5.02,18,2.056,19,4.503,20,0.728,21,1.406,22,5.02,23,0.728,24,0.037,25,3.158,26,1.571,27,3.727,28,1.074,29,3.441,30,2.833,31,2.528,32,3.727,33,4.503,34,0.538,35,0.403,36,2.164,37,1.18,38,1.931,39,1.571,40,2.456,41,0.295,42,0.295,43,3.441,44,2.528,45,1.931,46,3.441,47,3.441,48,3.441,49,1.571,50,2.056,51,2.056,52,1.571,53,2.432,54,1.571,55,1.163,56,1.571,57,1.074,58,1.571,59,1.074,60,1.571,61,2.056,62,0.978,63,1.074,64,1.571,65,0.978,66,1.571,67,0.978,68,1.571,69,1.571,70,1.571,71,0.02,72,0.026,73,0.02]],["title/modules/AppModule.html",[74,1.372,75,1.89]],["body/modules/AppModule.html",[1,1.873,3,0.274,4,0.274,9,0.227,12,1.779,24,0.037,34,0.616,35,0.375,37,1.098,39,1.462,40,2.286,41,0.274,42,0.274,63,1.736,67,1.579,71,0.019,72,0.025,73,0.019,75,3.835,76,1.098,77,2.168,78,2.65,79,2.65,80,2.65,81,2.65,82,3.12,83,2.538,84,2.701,85,1.617,86,2.014,87,3.202,88,2.701,89,1.961,90,4.294,91,1.961,92,4.294,93,3.553,94,2.286,95,2.286,96,3.202,97,4.294,98,3.202,99,2.286,100,3.202,101,2.65,102,2.65,103,3.202,104,3.202,105,3.202,106,3.202,107,3.202,108,2.65,109,2.65,110,4.294,111,3.202,112,1.961,113,2.286,114,2.014,115,2.65,116,3.202,117,3.202,118,3.202,119,3.202,120,3.202,121,3.202,122,3.202,123,3.202,124,3.202,125,3.202,126,3.202,127,3.202,128,3.202,129,3.202,130,3.202,131,3.202,132,3.202,133,3.202]],["title/modules/AppRoutingModule.html",[74,1.372,82,1.686]],["body/modules/AppRoutingModule.html",[0,0.609,3,0.344,4,0.344,9,0.285,24,0.038,34,0.545,35,0.47,41,0.344,42,0.344,67,1.412,71,0.024,72,0.029,73,0.024,76,1.377,82,2.789,89,1.833,91,2.269,114,2.526,115,3.323,134,4.015,135,2.866,136,3.547,137,2.724,138,2.027,139,1.664,140,4.137,141,4.969,142,4.969,143,4.015,144,2.526,145,4.969,146,4.015,147,4.015,148,1.141,149,4.015,150,4.015,151,4.112,152,4.015,153,2.526]],["title/components/CaseComponent.html",[0,0.456,57,0.938]],["body/components/CaseComponent.html",[0,0.805,1,0.95,2,1.718,3,0.261,4,0.261,5,1.389,6,1.389,7,1.389,8,1.389,9,0.216,11,0.643,12,2.396,13,1.389,14,1.806,16,1.894,18,1.894,20,0.877,23,0.877,24,0.037,28,0.95,34,0.419,35,0.356,41,0.261,42,0.261,44,1.707,45,2.845,49,1.389,50,1.894,51,1.894,52,1.389,53,2.314,54,1.389,55,1.071,56,1.389,57,1.583,58,1.389,59,0.95,60,1.389,61,1.894,62,0.864,63,0.95,64,1.389,65,0.864,66,1.389,67,0.864,68,1.389,69,1.389,70,1.389,71,0.018,72,0.024,73,0.018,148,1.178,154,2.517,155,4.389,156,4.147,157,4.147,158,2.961,159,3.432,160,3.432,161,4.719,162,4.147,163,4.147,164,2.224,165,3.041,166,2.094,167,3.432,168,3.041,169,2.517,170,2.517,171,3.041,172,2.517,173,2.961,174,4.147,175,1.707,176,2.517,177,2.171,178,1.389,179,4.53,180,3.041,181,4.719,182,3.369,183,4.719,184,4.147,185,4.147,186,3.432,187,4.53,188,2.171,189,1.913,190,4.248,191,3.041,192,2.517,193,1.913,194,1.913,195,2.171,196,2.517,197,1.707,198,3.041,199,2.171,200,3.041]],["title/components/EndGameComponent.html",[0,0.456,59,0.938]],["body/components/EndGameComponent.html",[0,0.76,1,0.813,2,1.542,3,0.223,4,0.223,5,1.189,6,1.189,7,1.189,8,1.189,9,0.185,11,0.787,12,2.314,13,1.189,14,1.744,16,1.699,18,1.699,20,0.551,21,1.162,23,1.002,24,0.037,26,1.189,28,1.479,31,2.437,34,0.439,35,0.305,41,0.223,42,0.223,49,1.189,50,1.699,51,1.699,52,1.189,53,2.163,54,1.189,55,1.121,56,1.189,57,0.813,58,1.189,59,1.479,60,2.505,61,1.699,62,0.74,63,0.813,64,1.189,65,0.74,66,1.189,67,0.74,68,1.189,69,1.189,70,1.189,71,0.015,72,0.022,73,0.015,148,1.524,159,3.079,160,3.079,169,2.155,175,1.461,192,2.155,197,2.088,199,2.656,201,4.146,202,3.152,203,2.155,204,3.92,205,3.721,206,3.079,207,3.593,208,3.079,209,3.986,210,4.341,211,3.011,212,4.341,213,3.099,214,2.604,215,2.104,216,3.721,217,3.721,218,3.721,219,1.315,220,1.079,221,3.593,222,3.382,223,2.088,224,2.088,225,5.486,226,5.486,227,4.737,228,2.604,229,2.925,230,3.92,231,4.737,232,2.604,233,2.604,234,4.737,235,2.604,236,2.604,237,1.859,238,1.859,239,1.859,240,2.604,241,3.079,242,3.079,243,1.699,244,3.079,245,2.088,246,2.341,247,3.721,248,3.721,249,2.604,250,1.859,251,3.079,252,2.604,253,2.604,254,2.341,255,2.656,256,2.155]],["title/interfaces/Game.html",[148,0.854,257,1.372]],["body/interfaces/Game.html",[3,0.286,4,0.286,9,0.237,11,0.706,20,0.706,21,1.378,23,1.213,24,0.037,34,0.446,41,0.286,71,0.02,72,0.026,73,0.02,148,1.654,158,3.757,164,2.062,211,2.954,215,2.353,220,2.18,221,3.652,257,1.523,258,2.099,259,2.761,260,3.15,261,2.228,262,3.156,263,3.156,264,3.757,265,3.757,266,3.156,267,3.31,268,2.716,269,2.657,270,3.757,271,2.228,272,4.413,273,2.015,274,2.776,275,3.652,276,3.652]],["title/components/GameComponent.html",[0,0.456,62,0.854]],["body/components/GameComponent.html",[0,0.505,1,0.351,2,0.794,3,0.096,4,0.096,5,1.86,6,0.513,7,0.513,8,0.513,9,0.08,11,0.818,12,1.761,13,0.513,14,1.327,16,0.875,18,0.875,20,0.405,21,0.599,23,0.985,24,0.038,25,1.863,26,0.513,28,1.454,31,2.771,34,0.481,35,0.132,36,0.707,37,0.385,38,0.631,41,0.096,42,0.096,44,0.631,45,1.076,49,0.513,50,0.875,51,0.875,52,0.513,53,1.353,54,0.513,55,1.051,56,0.513,57,0.351,58,0.513,59,0.599,60,1.518,61,0.875,62,0.842,63,0.351,64,0.513,65,0.319,66,0.513,67,0.319,68,0.513,69,0.513,70,0.513,71,0.011,72,0.011,73,0.007,112,0.513,113,0.802,138,0.567,139,1.039,144,1.863,148,1.444,155,2.074,158,3.143,164,2.152,166,1.828,173,2.115,175,1.663,176,0.93,177,0.802,178,0.875,179,1.586,186,0.93,187,0.93,188,1.368,189,1.206,193,0.707,194,0.707,195,1.789,196,0.93,197,1.076,199,1.368,202,0.707,204,2.074,206,1.586,207,2.074,208,1.586,209,3.524,211,1.407,213,0.802,215,2.06,219,1.828,220,1.5,223,1.407,224,1.076,229,1.076,230,0.93,237,0.802,239,3.143,241,0.93,242,0.93,243,1.518,244,0.93,245,0.631,246,0.707,254,1.206,255,0.802,261,0.968,262,2.547,263,2.613,266,1.663,267,1.863,268,2.607,271,2.598,273,0.875,274,0.707,275,1.586,277,0.93,278,1.586,279,2.074,280,2.507,281,2.507,282,0.875,283,1.917,284,2.908,285,2.994,286,1.917,287,1.917,288,1.917,289,2.451,290,1.917,291,2.115,292,2.451,293,1.917,294,3.239,295,1.124,296,2.962,297,2.962,298,3.026,299,1.586,300,1.917,301,1.917,302,1.917,303,1.917,304,1.941,305,2.286,306,1.124,307,3.62,308,2.032,309,1.917,310,2.278,311,0.968,312,1.917,313,1.124,314,1.789,315,1.917,316,1.917,317,1.368,318,2.962,319,1.917,320,3.199,321,1.124,322,1.917,323,1.917,324,1.917,325,2.451,326,4.073,327,4.073,328,1.917,329,1.124,330,1.917,331,1.917,332,1.124,333,1.917,334,1.124,335,2.962,336,1.124,337,2.451,338,1.917,339,1.124,340,1.368,341,1.917,342,1.917,343,1.124,344,1.863,345,1.917,346,1.917,347,1.368,348,1.917,349,1.124,350,2.585,351,1.124,352,2.962,353,2.962,354,1.124,355,1.917,356,0.93,357,0.93,358,1.917,359,0.93,360,0.93,361,1.124,362,1.124,363,0.93,364,0.93,365,0.802,366,2.074,367,1.124,368,1.368,369,1.124,370,0.93,371,1.124,372,2.962,373,1.124,374,1.124,375,1.124,376,1.124,377,2.115,378,1.124,379,1.917,380,1.124,381,1.124,382,1.124,383,1.124,384,1.124,385,1.586,386,1.124,387,2.074,388,0.802,389,0.93,390,1.917,391,1.124,392,1.124,393,1.124,394,1.917,395,1.124,396,1.124,397,1.124,398,1.496,399,2.507,400,1.496,401,0.93,402,1.124,403,2.074,404,1.586,405,1.586,406,0.707,407,1.917,408,1.663,409,1.124,410,1.586,411,1.124,412,1.124,413,1.124,414,1.124,415,0.802,416,2.507,417,0.707,418,1.124,419,0.93,420,1.124,421,1.124,422,1.124,423,1.124,424,0.93,425,1.124,426,1.124,427,1.124,428,1.124,429,1.124,430,1.124,431,1.124,432,0.631,433,1.124,434,1.124,435,1.124,436,1.124,437,2.507,438,1.124,439,1.124,440,1.917,441,1.124,442,1.124,443,1.917,444,1.124,445,1.124,446,1.124,447,1.917,448,1.917,449,1.124,450,0.93,451,1.124,452,1.124,453,1.917,454,1.917,455,1.917,456,1.789,457,1.917,458,2.374,459,2.507,460,1.124,461,1.124,462,1.586,463,1.917,464,3.866,465,2.074,466,1.124,467,1.586,468,1.124,469,1.124,470,1.124,471,0.707,472,0.93,473,1.124,474,1.124,475,1.124,476,1.124,477,1.124,478,1.124,479,1.124,480,1.917,481,1.124,482,0.93,483,1.124,484,1.124,485,1.124,486,0.802,487,1.124,488,1.586,489,1.124,490,1.206,491,0.802,492,2.074,493,0.93,494,1.124,495,0.93,496,1.124,497,1.124,498,1.124,499,1.124,500,2.962,501,4.655,502,1.917,503,1.124,504,1.917]],["title/modules/GameModule.html",[74,1.372,505,1.89]],["body/modules/GameModule.html",[3,0.317,4,0.317,9,0.263,24,0.037,34,0.601,35,0.434,41,0.317,42,0.317,57,1.806,59,1.806,62,1.643,71,0.022,72,0.028,73,0.022,76,1.27,77,2.384,83,2.641,84,2.97,85,1.869,86,2.329,88,2.97,89,2.156,91,2.156,95,2.643,99,2.643,148,1.052,202,2.329,364,3.063,365,3.371,505,3.888,506,3.063,507,3.063,508,3.063,509,3.246,510,3.702,511,3.371,512,2.329,513,3.702,514,3.907,515,2.643,516,2.643]],["title/modules/GameRoutingModule.html",[74,1.372,509,1.686]],["body/modules/GameRoutingModule.html",[0,0.662,3,0.374,4,0.374,9,0.31,24,0.037,34,0.565,35,0.511,41,0.374,42,0.374,62,1.485,71,0.026,72,0.031,73,0.026,76,1.497,89,1.993,91,2.387,135,3.116,136,3.732,137,2.826,138,2.204,139,1.808,140,3.116,153,2.745,365,3.116,509,2.934,517,4.364,518,3.612]],["title/injectables/GameState.html",[112,1.372,519,1.132]],["body/injectables/GameState.html",[3,0.126,4,0.126,9,0.104,11,0.311,14,1.365,20,0.311,21,0.749,23,1.05,24,0.038,26,2.215,28,1.551,34,0.419,35,0.172,37,0.504,41,0.206,42,0.206,55,1.369,71,0.009,72,0.014,73,0.009,85,1.771,112,1.095,139,2.058,144,1.912,148,1.649,164,1.942,166,1.771,178,1.764,197,1.346,211,2.648,215,1.718,219,2.449,220,2.01,223,0.825,224,0.825,238,1.049,243,0.671,245,0.825,246,0.925,261,2.98,262,2.723,263,2.844,264,1.713,265,1.713,266,2.723,267,3.052,268,0.671,269,1.771,271,1.951,273,1.764,274,0.925,282,1.601,284,2.169,285,1.912,289,1.985,291,2.959,292,1.985,298,1.706,304,2.45,305,2.454,308,0.825,310,1.509,311,1.771,314,2.959,317,2.503,340,1.713,344,0.925,347,1.713,350,2.758,388,1.049,398,1.534,400,1.534,406,0.925,408,0.825,415,1.049,417,3.052,471,1.509,519,0.904,520,0.925,521,1.049,522,2.515,523,2.967,524,2.399,525,2.399,526,2.399,527,2.959,528,2.959,529,1.47,530,3.546,531,1.985,532,1.47,533,1.47,534,3.863,535,1.985,536,1.47,537,1.985,538,2.902,539,1.968,540,2.503,541,1.985,542,1.985,543,1.985,544,3.052,545,1.47,546,1.985,547,1.47,548,1.985,549,1.47,550,1.47,551,2.902,552,1.985,553,1.47,554,1.985,555,1.47,556,1.985,557,1.47,558,1.985,559,1.47,560,1.985,561,1.47,562,1.47,563,1.985,564,1.47,565,1.47,566,1.985,567,1.47,568,2.169,569,2.503,570,1.47,571,1.049,572,1.216,573,1.216,574,1.216,575,0.925,576,1.216,577,1.216,578,2.503,579,2.503,580,1.346,581,1.985,582,0.925,583,3.618,584,1.985,585,1.216,586,1.216,587,3.292,588,1.985,589,2.75,590,3.43,591,1.216,592,1.216,593,1.216,594,1.216,595,1.985,596,1.216,597,1.216,598,1.985,599,1.985,600,1.216,601,1.985,602,1.985,603,1.985,604,1.216,605,1.985,606,1.216,607,1.216,608,1.049,609,1.216,610,2.758,611,1.985,612,1.049,613,1.713,614,1.049,615,2.902,616,2.902,617,2.206,618,1.216,619,1.216,620,2.902,621,1.216,622,1.216,623,1.713,624,1.049,625,1.216,626,1.216,627,1.216]],["title/classes/GameStateModel.html",[42,0.257,544,1.89]],["body/classes/GameStateModel.html",[3,0.158,4,0.158,9,0.131,11,0.39,14,1.246,20,0.39,21,0.898,23,0.39,24,0.038,28,0.576,34,0.463,35,0.216,37,0.632,41,0.246,42,0.246,55,1.235,71,0.011,72,0.017,73,0.011,85,1.451,112,0.842,139,2.194,144,1.808,148,1.687,164,1.864,166,1.451,178,2.184,197,1.035,211,2.778,215,1.629,223,1.035,224,1.035,238,1.316,243,0.842,245,1.035,246,1.16,261,2.998,262,2.918,263,3.02,264,2.522,265,2.522,266,2.918,267,3.113,268,1.312,269,1.451,271,2.014,273,1.613,274,1.808,282,0.842,284,1.316,285,1.16,291,2.052,298,1.613,304,1.613,308,1.035,310,1.16,311,1.451,314,2.052,317,2.052,340,1.316,344,1.16,347,1.316,350,2.848,388,1.316,398,1.783,400,2.014,406,1.16,408,1.035,415,1.316,417,3.113,471,2.222,519,1.083,521,1.316,522,1.526,523,2.222,527,2.052,528,2.052,530,3.113,531,1.526,535,1.526,537,1.526,538,2.378,539,1.613,540,2.052,541,1.526,542,1.526,543,1.526,544,2.72,546,1.526,548,1.526,551,2.378,552,1.526,554,1.526,556,1.526,558,1.526,560,1.526,563,1.526,566,1.526,568,1.983,569,2.522,571,1.316,572,1.526,573,1.526,574,1.526,575,1.808,576,2.378,577,2.378,578,3.27,579,3.27,580,1.983,581,2.923,582,1.16,583,3.959,584,2.378,585,1.526,586,1.526,587,3.471,588,2.378,589,3.009,590,3.791,591,1.526,592,1.526,593,1.526,594,1.526,595,2.378,596,1.526,597,1.526,598,2.378,599,2.378,600,1.526,601,2.378,602,2.378,603,2.378,604,1.526,605,2.378,606,1.526,607,1.526,608,1.316,609,1.526,610,3.087,611,2.378,612,1.316,613,2.052,614,1.316,615,3.301,616,3.301,617,2.509,618,1.526,619,1.526,620,3.301,621,1.526,622,1.526,623,2.052,624,1.316,625,1.526,626,1.526,627,1.526,628,1.316,629,1.844]],["title/components/HeaderComponent.html",[0,0.456,63,0.938]],["body/components/HeaderComponent.html",[0,0.782,1,0.877,2,1.626,3,0.241,4,0.241,5,1.282,6,1.282,7,1.282,8,1.282,9,0.199,11,0.594,12,2.41,13,1.282,14,1.774,16,1.792,18,1.792,20,0.594,21,1.226,23,0.83,24,0.037,25,3.082,26,1.282,27,3.248,28,1.413,30,3.518,31,2.893,32,3.248,34,0.54,35,0.329,36,1.766,37,0.963,38,1.576,39,1.282,40,2.004,41,0.241,42,0.241,49,1.282,50,1.792,51,1.792,52,1.282,53,2.237,54,1.282,55,1.013,56,1.282,57,0.877,58,1.282,59,0.877,60,1.282,61,1.792,62,0.798,63,1.53,64,1.282,65,0.798,66,1.282,67,0.798,68,1.282,69,1.282,70,1.282,71,0.016,72,0.023,73,0.016,166,1.982,172,2.323,173,2.004,189,1.766,190,2.802,229,1.576,269,1.982,273,1.282,278,3.248,279,3.744,282,1.792,304,1.792,305,2.54,359,2.323,360,2.323,368,2.802,370,2.323,377,2.004,400,1.418,490,1.766,539,2.203,630,2.323,631,4.899,632,4.524,633,3.924,634,3.23,635,4.899,636,3.813,637,2.808,638,3.924,639,3.924,640,3.924,641,3.924,642,3.924,643,2.808,644,3.924,645,2.808,646,2.808,647,2.808,648,3.924,649,2.808,650,2.808,651,2.808,652,2.808,653,3.924,654,3.924,655,3.924,656,2.808,657,2.808,658,2.004,659,2.323,660,2.323,661,2.323,662,2.323]],["title/components/HomepageComponent.html",[0,0.456,65,0.854]],["body/components/HomepageComponent.html",[0,0.802,1,0.656,2,1.317,3,0.18,4,0.18,5,0.96,6,0.96,7,0.96,8,0.96,9,0.149,11,0.672,12,2.189,13,0.96,14,1.65,16,1.451,18,1.451,20,0.445,21,0.993,23,0.971,24,0.037,25,3.153,26,1.451,28,1.507,31,3.071,34,0.488,35,0.246,36,1.322,37,0.721,38,1.18,41,0.18,42,0.18,44,1.784,45,2.151,49,0.96,50,1.451,51,1.451,52,0.96,53,1.951,54,0.96,55,1.294,56,0.96,57,0.656,58,0.96,59,0.656,60,0.96,61,1.451,62,0.597,63,0.656,64,0.96,65,1.214,66,0.96,67,0.597,68,0.96,69,0.96,70,0.96,71,0.012,72,0.019,73,0.012,112,0.96,113,1.501,138,1.061,148,1.214,166,2.157,175,2.151,177,1.501,178,0.96,182,2.736,188,1.501,189,2.411,190,3.578,193,1.322,194,1.999,213,1.501,219,2.317,220,1.588,222,3.05,229,2.151,239,2.736,250,1.501,251,3.536,256,1.739,262,2.813,266,2.813,270,3.276,273,0.96,282,1.451,285,1.999,294,2.269,298,1.784,304,1.951,305,2.398,311,2.157,344,1.999,363,1.739,366,3.172,368,1.501,377,2.736,400,1.061,450,1.739,456,2.269,458,3.05,462,1.739,465,2.63,467,2.63,486,2.269,488,1.739,490,1.322,491,1.501,492,2.63,493,2.63,527,2.736,528,2.736,580,1.18,658,3.05,659,1.739,660,1.739,661,2.63,662,2.63,663,1.739,664,3.833,665,3.178,666,3.178,667,4.273,668,3.178,669,2.102,670,4.827,671,3.178,672,5.012,673,3.178,674,2.102,675,5.545,676,3.178,677,3.178,678,2.102,679,2.102,680,3.178,681,2.63,682,3.178,683,2.102,684,4.273,685,4.273,686,3.178,687,2.102,688,2.102,689,2.102,690,2.102,691,2.102,692,3.178,693,3.178,694,3.178,695,1.739,696,2.102,697,2.102,698,1.739,699,1.739,700,2.102,701,2.102,702,2.102,703,1.739,704,3.178,705,2.102,706,2.102,707,2.102,708,2.102,709,2.102,710,3.833,711,3.178,712,2.102,713,4.273,714,2.102,715,2.102,716,2.102]],["title/modules/HomepageModule.html",[74,1.372,717,1.89]],["body/modules/HomepageModule.html",[3,0.333,4,0.333,9,0.276,24,0.037,34,0.6,35,0.455,41,0.333,42,0.333,65,1.663,71,0.023,72,0.029,73,0.023,76,1.331,77,2.457,83,2.673,84,3.061,85,1.96,86,2.442,88,3.061,89,2.221,91,2.221,95,2.771,99,2.771,270,2.771,511,3.473,512,2.442,514,4.026,515,2.771,516,2.771,717,3.839,718,3.212,719,3.212,720,3.212,721,3.286,722,3.882,723,3.212,724,4.865,725,3.212]],["title/modules/HomepageRoutingModule.html",[74,1.372,721,1.686]],["body/modules/HomepageRoutingModule.html",[0,0.662,3,0.374,4,0.374,9,0.31,24,0.037,34,0.565,35,0.511,41,0.374,42,0.374,65,1.485,71,0.026,72,0.031,73,0.026,76,1.497,89,1.993,91,2.387,135,3.116,136,3.732,137,2.826,138,2.204,139,1.808,140,3.116,153,2.745,518,3.612,721,2.934,723,3.612,726,4.364]],["title/modules/MaterialModule.html",[74,1.372,83,1.372]],["body/modules/MaterialModule.html",[3,0.264,4,0.264,9,0.219,24,0.035,34,0.642,35,0.361,41,0.264,42,0.264,71,0.018,72,0.025,73,0.018,76,1.056,83,1.909,88,1.937,89,1.406,91,1.909,153,1.937,237,2.198,356,2.548,357,3.46,511,2.985,512,1.937,727,3.079,728,4.181,729,3.079,730,4.181,731,3.079,732,4.181,733,3.079,734,3.079,735,4.181,736,3.079,737,4.181,738,3.079,739,4.181,740,3.079,741,4.181,742,3.079,743,4.181,744,3.079,745,4.181,746,3.079,747,4.181,748,3.079,749,4.181,750,3.079,751,3.079,752,4.181,753,4.181,754,4.181,755,4.181,756,4.181,757,3.079,758,4.181,759,3.079,760,4.181,761,3.079,762,4.181,763,3.079,764,4.181,765,3.079,766,4.181,767,4.181,768,3.079,769,4.181,770,3.079,771,4.181,772,3.079,773,3.079,774,4.181,775,3.079,776,4.181,777,3.079,778,4.181,779,3.079,780,4.181,781,3.079,782,4.181,783,4.181,784,3.079,785,4.181,786,3.079,787,4.181,788,4.181,789,4.181,790,3.079,791,4.181,792,3.079,793,4.181,794,3.079,795,4.181,796,3.079,797,4.181,798,3.079,799,4.181,800,3.079,801,4.181,802,4.181,803,3.079,804,4.181,805,3.079,806,4.181,807,3.079,808,4.181,809,3.079,810,4.181,811,3.079,812,4.181,813,3.079,814,4.181,815,3.079]],["title/components/NotFoundComponent.html",[0,0.456,67,0.854]],["body/components/NotFoundComponent.html",[0,0.839,1,1.077,2,1.868,3,0.295,4,0.295,5,1.574,6,1.574,7,1.574,8,1.574,9,0.245,11,0.729,12,2.457,13,1.574,14,1.852,16,2.059,18,2.059,24,0.037,34,0.348,35,0.404,41,0.295,42,0.295,44,1.935,49,1.574,50,2.059,51,2.059,52,1.574,53,2.434,54,1.574,55,1.164,56,1.574,57,1.077,58,1.574,59,1.077,60,1.574,61,2.059,62,0.98,63,1.077,64,1.574,65,0.98,66,1.574,67,1.514,68,2.434,69,1.574,70,1.574,71,0.02,72,0.026,73,0.02,114,2.169,151,3.731,175,1.935,182,2.461,193,2.169,229,1.935,243,2.059,250,2.461,254,2.169,255,2.461,456,3.219,458,3.219,486,2.461,490,2.837,491,2.461,658,3.219,681,3.731,695,2.853,698,2.853,699,2.853,703,2.853,816,2.853,817,2.853,818,5.025,819,4.509,820,4.509,821,3.447,822,4.509,823,4.509,824,3.447,825,3.447,826,3.447,827,3.447,828,3.447,829,3.447,830,3.447,831,3.447]],["title/interfaces/Pawn.html",[164,1.132,257,1.372]],["body/interfaces/Pawn.html",[3,0.328,4,0.328,9,0.272,11,0.81,20,0.81,21,1.507,23,1.117,24,0.037,34,0.387,41,0.328,71,0.022,72,0.028,73,0.022,164,2.32,195,3.445,215,2.308,220,1.999,257,1.749,258,2.41,260,3.445,268,2.664,271,2.436,320,4.828,325,4.828,432,2.708,832,3.17,833,5.545,834,4.825,835,4.825,836,4.825,837,5.545,838,2.41]],["title/interfaces/Player.html",[215,1.132,257,1.372]],["body/interfaces/Player.html",[3,0.356,4,0.356,9,0.295,11,0.879,20,0.879,21,1.585,23,1.074,24,0.037,41,0.356,55,1.537,71,0.024,72,0.03,73,0.024,178,2.318,215,2.335,222,3.912,257,1.898,258,2.615,260,2.968,268,2.502,273,2.318,276,4.201,400,2.563,578,4.25,580,2.849,839,3.441,840,5.076]],["title/injectables/ThemeState.html",[39,1.372,519,1.132]],["body/injectables/ThemeState.html",[3,0.297,4,0.297,9,0.246,11,0.732,14,1.572,20,0.732,23,0.956,24,0.038,26,2.064,28,1.412,30,3.733,34,0.509,35,0.405,37,1.187,39,2.064,41,0.387,42,0.387,55,1.3,71,0.02,72,0.027,73,0.02,139,1.434,219,2.283,220,1.873,261,3.023,269,1.747,282,2.064,304,2.064,305,1.943,308,1.943,311,2.283,398,1.747,432,1.943,519,1.703,520,2.177,523,3.167,530,3.358,575,2.177,582,2.177,587,2.844,589,2.177,634,3.811,636,3.594,838,2.844,841,2.471,842,4.521,843,3.741,844,3.358,845,3.461,846,3.741,847,3.227,848,3.461,849,3.741,850,3.461,851,2.864,852,3.741,853,2.864]],["title/classes/ThemeStateModel.html",[42,0.257,844,1.89]],["body/classes/ThemeStateModel.html",[3,0.314,4,0.314,9,0.26,11,0.775,14,1.465,20,0.775,21,1.465,23,0.775,24,0.038,28,1.144,30,3.735,34,0.523,35,0.429,37,1.256,39,1.673,41,0.402,42,0.402,55,0.946,71,0.022,72,0.028,73,0.022,139,1.518,223,2.056,224,2.056,261,2.998,269,2.368,308,2.056,311,1.85,398,1.85,432,2.632,519,1.767,523,2.304,530,2.95,575,2.95,582,2.304,587,2.95,589,2.304,628,2.615,634,4.186,636,2.615,838,3.254,841,2.615,843,3.031,844,3.254,846,3.031,847,3.348,849,3.031,851,3.031,852,3.881,853,3.031,854,3.663]],["title/injectables/VictoryCheckService.html",[519,1.132,568,1.686]],["body/injectables/VictoryCheckService.html",[3,0.153,4,0.153,9,0.127,11,0.377,15,1.474,20,0.9,23,0.828,24,0.038,28,1.223,34,0.349,35,0.209,41,0.153,42,0.153,55,1.011,71,0.01,72,0.016,73,0.01,148,1.601,164,2.039,167,3.24,170,1.474,178,2.501,194,2.463,209,3.809,219,1.977,220,1.622,243,1.788,254,2.463,263,2.89,268,2.351,271,2.47,282,1.788,294,1.998,298,1.571,299,3.24,304,1.788,310,3.077,337,4.415,385,3.24,387,3.24,398,1.977,401,3.24,403,2.316,404,4.415,405,2.316,406,1.121,408,1.571,410,2.86,417,3.445,419,2.316,424,2.86,432,2.198,482,3.24,495,3.24,519,1.054,520,1.121,539,3.187,540,3.675,568,1.571,571,1.272,579,2.795,608,1.272,610,3.809,612,1.998,613,2.795,614,1.998,617,1.121,623,2.795,624,1.998,838,2.463,847,3.809,855,3.521,856,1.474,857,2.798,858,2.798,859,2.798,860,2.798,861,2.798,862,2.798,863,1.782,864,3.915,865,2.798,866,1.782,867,2.798,868,3.915,869,1.782,870,2.798,871,2.798,872,1.782,873,2.798,874,1.782,875,3.915,876,2.798,877,2.798,878,2.798,879,2.798,880,2.798,881,3.915,882,3.915,883,3.915,884,3.915,885,3.915,886,1.782,887,1.782,888,1.782,889,3.915,890,5.335,891,1.782,892,3.915,893,4.516,894,3.456,895,3.915,896,3.24,897,3.915,898,1.782,899,2.798,900,1.782,901,3.456,902,3.456,903,1.782,904,1.782,905,3.456,906,1.782,907,2.798,908,3.915,909,2.798,910,2.798,911,2.798,912,2.798]],["title/coverage.html",[913,3.403]],["body/coverage.html",[0,0.898,1,1.191,9,0.271,10,3.156,23,0.807,24,0.037,39,1.742,42,0.412,45,3.493,57,1.191,59,1.191,62,1.084,63,1.191,65,1.084,67,1.084,71,0.022,72,0.028,73,0.022,112,1.742,114,2.399,148,1.084,154,3.156,164,1.437,201,3.156,202,2.399,203,3.156,215,1.437,257,2.407,259,3.156,277,3.156,519,1.986,521,3.435,544,2.399,568,2.141,569,2.723,630,3.156,663,3.156,816,3.156,817,3.156,832,3.156,839,3.156,841,3.435,844,2.399,855,3.156,856,3.156,913,3.156,914,3.156,915,3.814,916,3.814,917,5.536,918,5.271,919,3.814,920,3.814,921,3.814,922,3.814,923,4.812,924,3.814,925,3.814,926,3.814,927,3.814]],["title/dependencies.html",[77,1.826,928,2.503]],["body/dependencies.html",[24,0.037,35,0.495,37,1.45,38,2.373,71,0.025,72,0.03,73,0.025,77,2.135,93,4.244,94,3.661,101,3.499,102,3.499,108,3.499,109,3.499,138,2.135,512,2.66,515,3.018,516,3.018,725,3.499,929,4.228,930,6.146,931,4.228,932,5.128,933,4.228,934,4.228,935,4.228,936,4.228,937,4.228,938,5.128,939,4.228,940,4.228,941,4.228,942,4.228,943,4.228]],["title/index.html",[20,0.529,944,2.503,945,2.503]],["body/index.html",[24,0.033,71,0.026,72,0.031,73,0.026,243,2.013,245,3.338,389,4.352,408,2.952,539,2.952,617,3.308,914,3.648,946,4.408,947,4.408,948,4.408,949,4.408,950,5.259,951,5.259,952,5.62,953,5.259,954,5.259,955,5.259,956,4.408,957,4.408,958,4.408,959,4.408,960,4.408,961,4.408,962,4.408,963,4.408,964,4.408]],["title/modules.html",[76,1.411]],["body/modules.html",[24,0.031,71,0.027,72,0.031,73,0.027,75,2.845,76,1.551,82,2.538,83,2.065,94,4.056,505,2.845,509,2.538,717,2.845,721,2.538,965,5.681,966,5.681,967,6.13,968,5.869,969,5.869]],["title/overview.html",[970,3.403]],["body/overview.html",[1,1.838,2,1.544,24,0.037,57,1.628,59,1.628,62,1.481,63,1.628,65,1.481,67,1.481,71,0.022,72,0.028,73,0.022,75,3.876,76,1.278,77,2.394,78,3.083,79,3.083,80,3.083,81,3.083,82,2.927,83,2.588,84,2.982,85,1.881,86,2.343,137,1.881,258,2.343,471,2.982,472,3.083,505,3.858,506,3.083,507,3.083,508,3.083,509,2.927,520,2.343,580,2.091,628,2.66,717,3.748,718,3.083,719,3.083,720,3.083,721,2.927,896,3.923,970,3.083]],["title/routes.html",[137,2.076]],["body/routes.html",[24,0.033,71,0.029,72,0.033,73,0.029,137,2.481]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":400,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"interfaces/Player.html":{}}}],["0.11.4",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["0px",{"_index":485,"title":{},"body":{"components/GameComponent.html":{}}}],["1",{"_index":178,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{},"interfaces/Player.html":{},"injectables/VictoryCheckService.html":{}}}],["1.2rem",{"_index":702,"title":{},"body":{"components/HomepageComponent.html":{}}}],["1/1",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":450,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["100",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{},"coverage.html":{}}}],["100px",{"_index":829,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["10px",{"_index":501,"title":{},"body":{"components/GameComponent.html":{}}}],["11",{"_index":474,"title":{},"body":{"components/GameComponent.html":{}}}],["12.0.0",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":466,"title":{},"body":{"components/GameComponent.html":{}}}],["13",{"_index":476,"title":{},"body":{"components/GameComponent.html":{}}}],["13/13",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["140",{"_index":452,"title":{},"body":{"components/GameComponent.html":{}}}],["15",{"_index":478,"title":{},"body":{"components/GameComponent.html":{}}}],["15s",{"_index":497,"title":{},"body":{"components/GameComponent.html":{}}}],["1]?.x",{"_index":905,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["1]?.y",{"_index":894,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["1fr",{"_index":464,"title":{},"body":{"components/GameComponent.html":{}}}],["1px",{"_index":185,"title":{},"body":{"components/CaseComponent.html":{}}}],["2",{"_index":580,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{},"interfaces/Player.html":{},"overview.html":{}}}],["2.2.0",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":706,"title":{},"body":{"components/HomepageComponent.html":{}}}],["20px",{"_index":462,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["23px",{"_index":468,"title":{},"body":{"components/GameComponent.html":{}}}],["2867b2",{"_index":187,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{}}}],["2px",{"_index":190,"title":{},"body":{"components/CaseComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["2rem",{"_index":698,"title":{},"body":{"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["3",{"_index":896,"title":{},"body":{"injectables/VictoryCheckService.html":{},"overview.html":{}}}],["3.7.2",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["30px",{"_index":486,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["3rem",{"_index":696,"title":{},"body":{"components/HomepageComponent.html":{}}}],["4",{"_index":539,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"injectables/VictoryCheckService.html":{},"index.html":{}}}],["4/4",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{}}}],["40vh",{"_index":827,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["5",{"_index":469,"title":{},"body":{"components/GameComponent.html":{}}}],["5/5",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":492,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["50px",{"_index":491,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["5px",{"_index":703,"title":{},"body":{"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["6",{"_index":581,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["6.6.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["6585f.web.app",{"_index":956,"title":{},"body":{"index.html":{}}}],["6b641a",{"_index":504,"title":{},"body":{"components/GameComponent.html":{}}}],["6px",{"_index":661,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["7",{"_index":471,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"overview.html":{}}}],["7/7",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["72211d",{"_index":502,"title":{},"body":{"components/GameComponent.html":{}}}],["8/8",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":250,"title":{},"body":{"components/EndGameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["84px",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["88vh",{"_index":457,"title":{},"body":{"components/GameComponent.html":{}}}],["9",{"_index":472,"title":{},"body":{"components/GameComponent.html":{},"overview.html":{}}}],["90",{"_index":488,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["999",{"_index":662,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["__action",{"_index":828,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["__container",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["__flag",{"_index":715,"title":{},"body":{"components/HomepageComponent.html":{}}}],["__grid",{"_index":460,"title":{},"body":{"components/GameComponent.html":{}}}],["__image",{"_index":699,"title":{},"body":{"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["__play",{"_index":700,"title":{},"body":{"components/HomepageComponent.html":{}}}],["__settings",{"_index":704,"title":{},"body":{"components/HomepageComponent.html":{}}}],["__title",{"_index":695,"title":{},"body":{"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["_snack",{"_index":369,"title":{},"body":{"components/GameComponent.html":{}}}],["a.x",{"_index":901,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["a.y",{"_index":887,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["a11ymodule",{"_index":728,"title":{},"body":{"modules/MaterialModule.html":{}}}],["absolute",{"_index":489,"title":{},"body":{"components/GameComponent.html":{}}}],["action",{"_index":308,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["action(cancellastmove",{"_index":531,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(checkwinner",{"_index":535,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(gameinit",{"_index":552,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(gamereset",{"_index":560,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(playpawn",{"_index":556,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(setcolumns",{"_index":563,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(setrows",{"_index":566,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["action(toogletheme",{"_index":849,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["actual",{"_index":353,"title":{},"body":{"components/GameComponent.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["add",{"_index":558,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["align",{"_index":254,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/NotFoundComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["aligned",{"_index":540,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["alignedpawns",{"_index":890,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["alignés",{"_index":889,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["already",{"_index":607,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["angular/animations",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":729,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/clipboard",{"_index":731,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":733,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/overlay",{"_index":815,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":736,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":738,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":740,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":742,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":744,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":512,"title":{},"body":{"modules/GameModule.html":{},"modules/HomepageModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":515,"title":{},"body":{"modules/GameModule.html":{},"modules/HomepageModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":725,"title":{},"body":{"modules/HomepageModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":746,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/badge",{"_index":748,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":750,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":753,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":757,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":759,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":761,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":784,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":765,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":237,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":768,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":770,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":772,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":775,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":777,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":779,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":781,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":786,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":788,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":792,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":794,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":796,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":800,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":798,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":356,"title":{},"body":{"components/GameComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":803,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":763,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":805,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":807,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":809,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":811,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":813,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"modules/GameRoutingModule.html":{},"components/HomepageComponent.html":{},"modules/HomepageRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":296,"title":{},"body":{"components/GameComponent.html":{}}}],["animatefallingpawn",{"_index":283,"title":{},"body":{"components/GameComponent.html":{}}}],["animatefallingpawn(column",{"_index":293,"title":{},"body":{"components/GameComponent.html":{}}}],["animation",{"_index":301,"title":{},"body":{"components/GameComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["app.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appartiennent",{"_index":878,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applied",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["applies",{"_index":638,"title":{},"body":{"components/HeaderComponent.html":{}}}],["applydarktheme",{"_index":635,"title":{},"body":{"components/HeaderComponent.html":{}}}],["appmodule",{"_index":75,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":82,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":350,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["array(g!.columns",{"_index":374,"title":{},"body":{"components/GameComponent.html":{}}}],["array(g!.rows",{"_index":376,"title":{},"body":{"components/GameComponent.html":{}}}],["async)!.turn!.name",{"_index":453,"title":{},"body":{"components/GameComponent.html":{}}}],["au",{"_index":879,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["aucun",{"_index":600,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["aussi",{"_index":963,"title":{},"body":{"index.html":{}}}],["auto",{"_index":459,"title":{},"body":{"components/GameComponent.html":{}}}],["aux",{"_index":420,"title":{},"body":{"components/GameComponent.html":{}}}],["available",{"_index":969,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":959,"title":{},"body":{"index.html":{}}}],["b.x",{"_index":902,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["b.y",{"_index":888,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["background",{"_index":179,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{}}}],["bar",{"_index":357,"title":{},"body":{"components/GameComponent.html":{},"modules/MaterialModule.html":{}}}],["before",{"_index":191,"title":{},"body":{"components/CaseComponent.html":{}}}],["began",{"_index":272,"title":{},"body":{"interfaces/Game.html":{}}}],["beta.34",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":196,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{}}}],["body",{"_index":639,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bold",{"_index":826,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["boolean",{"_index":847,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":465,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["bottom",{"_index":194,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["box",{"_index":188,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["break",{"_index":437,"title":{},"body":{"components/GameComponent.html":{}}}],["brightness_5",{"_index":654,"title":{},"body":{"components/HeaderComponent.html":{}}}],["browse",{"_index":967,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":701,"title":{},"body":{"components/HomepageComponent.html":{}}}],["calc(100vh",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["cancellastmove",{"_index":284,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["cancellastmove(undefined",{"_index":529,"title":{},"body":{"injectables/GameState.html":{}}}],["cancellastmove({getstate",{"_index":594,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["case",{"_index":155,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{}}}],["case'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["case.component.html",{"_index":162,"title":{},"body":{"components/CaseComponent.html":{}}}],["case.component.scss",{"_index":161,"title":{},"body":{"components/CaseComponent.html":{}}}],["case.png",{"_index":181,"title":{},"body":{"components/CaseComponent.html":{}}}],["case/case.component",{"_index":513,"title":{},"body":{"modules/GameModule.html":{}}}],["case__animated",{"_index":487,"title":{},"body":{"components/GameComponent.html":{}}}],["casecomponent",{"_index":57,"title":{"components/CaseComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["causes",{"_index":316,"title":{},"body":{"components/GameComponent.html":{}}}],["cdksteppermodule",{"_index":739,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":741,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":743,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cell",{"_index":167,"title":{},"body":{"components/CaseComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["cells",{"_index":156,"title":{},"body":{"components/CaseComponent.html":{}}}],["center",{"_index":255,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/NotFoundComponent.html":{}}}],["changedetection",{"_index":159,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{}}}],["changedetectionstrategy",{"_index":169,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":160,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{}}}],["check",{"_index":417,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["check.service",{"_index":574,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["check.service.ts",{"_index":856,"title":{},"body":{"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["check.service.ts:101",{"_index":863,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["check.service.ts:16",{"_index":872,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["check.service.ts:44",{"_index":869,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["check.service.ts:72",{"_index":866,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["checks",{"_index":315,"title":{},"body":{"components/GameComponent.html":{}}}],["checkvictory",{"_index":286,"title":{},"body":{"components/GameComponent.html":{}}}],["checkvictory(playedpawn",{"_index":312,"title":{},"body":{"components/GameComponent.html":{}}}],["checkwinner",{"_index":314,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["checkwinner(playedpawn)).subscribe(store",{"_index":426,"title":{},"body":{"components/GameComponent.html":{}}}],["checkwinner(undefined",{"_index":533,"title":{},"body":{"injectables/GameState.html":{}}}],["checkwinner({getstate",{"_index":609,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["class",{"_index":42,"title":{"classes/GameStateModel.html":{},"classes/ThemeStateModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["classes",{"_index":628,"title":{},"body":{"classes/GameStateModel.html":{},"classes/ThemeStateModel.html":{},"overview.html":{}}}],["clipboardmodule",{"_index":730,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cluster_appmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":506,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_declarations",{"_index":507,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":508,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":718,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":719,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":720,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["colonne",{"_index":406,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["colonnes",{"_index":692,"title":{},"body":{"components/HomepageComponent.html":{}}}],["color",{"_index":303,"title":{},"body":{"components/GameComponent.html":{}}}],["column",{"_index":298,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["column).length",{"_index":411,"title":{},"body":{"components/GameComponent.html":{}}}],["columnplayed",{"_index":613,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["columns",{"_index":262,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{}}}],["column}`)[0",{"_index":445,"title":{},"body":{"components/GameComponent.html":{}}}],["comes",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":511,"title":{},"body":{"modules/GameModule.html":{},"modules/HomepageModule.html":{},"modules/MaterialModule.html":{}}}],["compodoc",{"_index":960,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"overview.html":{}}}],["composes",{"_index":157,"title":{},"body":{"components/CaseComponent.html":{}}}],["console.info(pawnplayed.player.name",{"_index":897,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["const",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"modules/HomepageRoutingModule.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":240,"title":{},"body":{"components/EndGameComponent.html":{}}}],["constructor(private",{"_index":647,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(winner",{"_index":214,"title":{},"body":{"components/EndGameComponent.html":{}}}],["contain",{"_index":183,"title":{},"body":{"components/CaseComponent.html":{}}}],["container",{"_index":461,"title":{},"body":{"components/GameComponent.html":{}}}],["contains",{"_index":576,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["content",{"_index":192,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{}}}],["coordinate",{"_index":837,"title":{},"body":{"interfaces/Pawn.html":{}}}],["coordinates",{"_index":324,"title":{},"body":{"components/GameComponent.html":{}}}],["coordonnées",{"_index":421,"title":{},"body":{"components/GameComponent.html":{}}}],["coverage",{"_index":913,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["dans",{"_index":405,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["dark",{"_index":634,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["dark_mode",{"_index":655,"title":{},"body":{"components/HeaderComponent.html":{}}}],["data",{"_index":430,"title":{},"body":{"components/GameComponent.html":{}}}],["dcdcdc",{"_index":716,"title":{},"body":{"components/HomepageComponent.html":{}}}],["de",{"_index":403,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{},"modules/MaterialModule.html":{}}}],["decorators",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{}}}],["deep",{"_index":709,"title":{},"body":{"components/HomepageComponent.html":{}}}],["default",{"_index":223,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"classes/ThemeStateModel.html":{}}}],["defaults",{"_index":582,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["dependencies",{"_index":77,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":226,"title":{},"body":{"components/EndGameComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["determine",{"_index":302,"title":{},"body":{"components/GameComponent.html":{}}}],["diagonale",{"_index":623,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["diagonalleftcheck",{"_index":858,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["diagonalleftcheck(game",{"_index":862,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["diagonally",{"_index":864,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["diagonalrightcheck",{"_index":859,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["diagonalrightcheck(game",{"_index":865,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["dialog",{"_index":204,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["dialogref",{"_index":428,"title":{},"body":{"components/GameComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":433,"title":{},"body":{"components/GameComponent.html":{}}}],["dialogs/end",{"_index":364,"title":{},"body":{"components/GameComponent.html":{},"modules/GameModule.html":{}}}],["directive",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["directives",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["disableclose",{"_index":431,"title":{},"body":{"components/GameComponent.html":{}}}],["dispatch",{"_index":307,"title":{},"body":{"components/GameComponent.html":{}}}],["display",{"_index":195,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"interfaces/Pawn.html":{}}}],["displaypawn",{"_index":287,"title":{},"body":{"components/GameComponent.html":{}}}],["displaypawn(x",{"_index":319,"title":{},"body":{"components/GameComponent.html":{}}}],["dispo",{"_index":953,"title":{},"body":{"index.html":{}}}],["doc",{"_index":957,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add(\"dark",{"_index":651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["document.body.classlist.remove(\"dark",{"_index":652,"title":{},"body":{"components/HeaderComponent.html":{}}}],["document.getelementsbyclassname(`falling",{"_index":444,"title":{},"body":{"components/GameComponent.html":{}}}],["documentation",{"_index":914,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation.web.appweb.app",{"_index":964,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":352,"title":{},"body":{"components/GameComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["dragdropmodule",{"_index":732,"title":{},"body":{"modules/MaterialModule.html":{}}}],["droite",{"_index":624,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["drop",{"_index":734,"title":{},"body":{"modules/MaterialModule.html":{}}}],["du",{"_index":419,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["dynamic",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["elle",{"_index":952,"title":{},"body":{"index.html":{}}}],["en",{"_index":408,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{},"index.html":{}}}],["enabled",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["endgamecomponent",{"_index":59,"title":{"components/EndGameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ends",{"_index":206,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["environment",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":395,"title":{},"body":{"components/GameComponent.html":{}}}],["error($localize",{"_index":599,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["est",{"_index":245,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"index.html":{}}}],["et",{"_index":962,"title":{},"body":{"index.html":{}}}],["event",{"_index":676,"title":{},"body":{"components/HomepageComponent.html":{}}}],["export",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["exports",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["external",{"_index":671,"title":{},"body":{"components/HomepageComponent.html":{}}}],["f4433b",{"_index":499,"title":{},"body":{"components/GameComponent.html":{}}}],["f4e43b",{"_index":503,"title":{},"body":{"components/GameComponent.html":{}}}],["faite",{"_index":958,"title":{},"body":{"index.html":{}}}],["fall",{"_index":300,"title":{},"body":{"components/GameComponent.html":{}}}],["falling",{"_index":297,"title":{},"body":{"components/GameComponent.html":{}}}],["false",{"_index":838,"title":{},"body":{"interfaces/Pawn.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["family",{"_index":659,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["firebase",{"_index":951,"title":{},"body":{"index.html":{}}}],["first",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["flexlayoutmodule",{"_index":514,"title":{},"body":{"modules/GameModule.html":{},"modules/HomepageModule.html":{}}}],["font",{"_index":658,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["formsmodule",{"_index":724,"title":{},"body":{"modules/HomepageModule.html":{}}}],["found",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["found.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":819,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":818,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":817,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fresh",{"_index":345,"title":{},"body":{"components/GameComponent.html":{}}}],["full",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["fullscreen",{"_index":480,"title":{},"body":{"components/GameComponent.html":{}}}],["g.pawns.filter(p",{"_index":409,"title":{},"body":{"components/GameComponent.html":{}}}],["g.pawns.map(p",{"_index":423,"title":{},"body":{"components/GameComponent.html":{}}}],["g.turn",{"_index":379,"title":{},"body":{"components/GameComponent.html":{}}}],["game",{"_index":148,"title":{"interfaces/Game.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["game'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["game.actions",{"_index":572,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["game.component",{"_index":365,"title":{},"body":{"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{}}}],["game.component.html",{"_index":208,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["game.component.scss",{"_index":207,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["game.component.ts",{"_index":203,"title":{},"body":{"components/EndGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:19",{"_index":228,"title":{},"body":{"components/EndGameComponent.html":{}}}],["game.component.ts:23",{"_index":216,"title":{},"body":{"components/EndGameComponent.html":{}}}],["game.component.ts:29",{"_index":233,"title":{},"body":{"components/EndGameComponent.html":{}}}],["game.pawns.filter(p",{"_index":881,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["game/end",{"_index":202,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["game__action",{"_index":483,"title":{},"body":{"components/GameComponent.html":{}}}],["game__actions",{"_index":484,"title":{},"body":{"components/GameComponent.html":{}}}],["game__players",{"_index":481,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent",{"_index":62,"title":{"components/GameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameinit",{"_index":551,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["gamemodule",{"_index":505,"title":{"modules/GameModule.html":{}},"body":{"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gamereset",{"_index":344,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{}}}],["gameroutingmodule",{"_index":509,"title":{"modules/GameRoutingModule.html":{}},"body":{"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["games",{"_index":342,"title":{},"body":{"components/GameComponent.html":{}}}],["gamestate",{"_index":112,"title":{"injectables/GameState.html":{}},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{},"coverage.html":{}}}],["gamestatemodel",{"_index":544,"title":{"classes/GameStateModel.html":{}},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"coverage.html":{}}}],["gauche",{"_index":626,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["getcolumns",{"_index":524,"title":{},"body":{"injectables/GameState.html":{}}}],["getcolumns(state",{"_index":543,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["getgame",{"_index":525,"title":{},"body":{"injectables/GameState.html":{}}}],["getgame(state",{"_index":546,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["getrows",{"_index":526,"title":{},"body":{"injectables/GameState.html":{}}}],["getrows(state",{"_index":548,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["gets",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["getstate",{"_index":589,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["gettheme",{"_index":842,"title":{},"body":{"injectables/ThemeState.html":{}}}],["gettheme(state",{"_index":843,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["getting",{"_index":944,"title":{"index.html":{}},"body":{}}],["getypositionincolumn",{"_index":288,"title":{},"body":{"components/GameComponent.html":{}}}],["getypositionincolumn(column",{"_index":328,"title":{},"body":{"components/GameComponent.html":{}}}],["given",{"_index":323,"title":{},"body":{"components/GameComponent.html":{}}}],["global",{"_index":641,"title":{},"body":{"components/HeaderComponent.html":{}}}],["graph",{"_index":968,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":158,"title":{},"body":{"components/CaseComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{}}}],["gridx",{"_index":280,"title":{},"body":{"components/GameComponent.html":{}}}],["gridy",{"_index":281,"title":{},"body":{"components/GameComponent.html":{}}}],["grille",{"_index":244,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["header",{"_index":631,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["header.component.html",{"_index":633,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":632,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header__title",{"_index":657,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":63,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hebergée",{"_index":950,"title":{},"body":{"index.html":{}}}],["height",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["hidden",{"_index":253,"title":{},"body":{"components/EndGameComponent.html":{}}}],["home",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homepage",{"_index":270,"title":{},"body":{"interfaces/Game.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{}}}],["homepage'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["homepage.component",{"_index":723,"title":{},"body":{"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{}}}],["homepage.component.html",{"_index":665,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepage.component.scss",{"_index":664,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepagecomponent",{"_index":65,"title":{"components/HomepageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepagemodule",{"_index":717,"title":{"modules/HomepageModule.html":{}},"body":{"modules/HomepageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":721,"title":{"modules/HomepageRoutingModule.html":{}},"body":{"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["horizontal",{"_index":707,"title":{},"body":{"components/HomepageComponent.html":{}}}],["horizontalcheck",{"_index":860,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["horizontalcheck(game",{"_index":867,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["horizontale",{"_index":621,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["horizontalement",{"_index":906,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["horizontally",{"_index":870,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["host",{"_index":172,"title":{},"body":{"components/CaseComponent.html":{},"components/HeaderComponent.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["htmlelement",{"_index":443,"title":{},"body":{"components/GameComponent.html":{}}}],["https://puissance",{"_index":955,"title":{},"body":{"index.html":{}}}],["ici",{"_index":954,"title":{},"body":{"index.html":{}}}],["id",{"_index":578,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"interfaces/Player.html":{}}}],["identifier",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["if((pawn.x",{"_index":911,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["if(alignedpawns",{"_index":895,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["if(isdark",{"_index":650,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(pawn.x",{"_index":904,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["if(pawn.y",{"_index":608,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["if(state.game.pawns.length",{"_index":597,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["if(store.game.game.pawns?.length",{"_index":391,"title":{},"body":{"components/GameComponent.html":{}}}],["if(store.game.game.winner",{"_index":427,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.victoryservice.diagonalleftcheck(state.game",{"_index":627,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["if(this.victoryservice.diagonalrightcheck(state.game",{"_index":625,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["if(this.victoryservice.horizontalcheck(state.game",{"_index":622,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["if(this.victoryservice.verticalcheck(state.game",{"_index":619,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["ignore",{"_index":368,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["implements",{"_index":278,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["import('./game/game.module').then(m",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./homepage/homepage.module').then(m",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":713,"title":{},"body":{"components/HomepageComponent.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["initgame",{"_index":289,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{}}}],["initgame(undefined",{"_index":550,"title":{},"body":{"injectables/GameState.html":{}}}],["initgame({getstate",{"_index":586,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["initialize",{"_index":554,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["inject",{"_index":235,"title":{},"body":{"components/EndGameComponent.html":{}}}],["inject(mat_dialog_data",{"_index":232,"title":{},"body":{"components/EndGameComponent.html":{}}}],["injectable",{"_index":519,"title":{"injectables/GameState.html":{},"injectables/ThemeState.html":{},"injectables/VictoryCheckService.html":{}},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["injectables",{"_index":520,"title":{},"body":{"injectables/GameState.html":{},"injectables/ThemeState.html":{},"injectables/VictoryCheckService.html":{},"overview.html":{}}}],["input",{"_index":168,"title":{},"body":{"components/CaseComponent.html":{}}}],["input('pawn",{"_index":171,"title":{},"body":{"components/CaseComponent.html":{}}}],["inputs",{"_index":163,"title":{},"body":{"components/CaseComponent.html":{}}}],["inset",{"_index":500,"title":{},"body":{"components/GameComponent.html":{}}}],["interface",{"_index":257,"title":{"interfaces/Game.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{}},"body":{"interfaces/Game.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["interfaces",{"_index":258,"title":{},"body":{"interfaces/Game.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"overview.html":{}}}],["isdarktheme",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["isinwinningline",{"_index":833,"title":{},"body":{"interfaces/Pawn.html":{}}}],["isn't",{"_index":340,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["item",{"_index":705,"title":{},"body":{"components/HomepageComponent.html":{}}}],["jaunes",{"_index":234,"title":{},"body":{"components/EndGameComponent.html":{}}}],["jeu",{"_index":388,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["jouer",{"_index":694,"title":{},"body":{"components/HomepageComponent.html":{}}}],["joueur",{"_index":579,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["jouée",{"_index":876,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["jsdoc",{"_index":961,"title":{},"body":{"index.html":{}}}],["l'accueil",{"_index":824,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["l'appli",{"_index":948,"title":{},"body":{"index.html":{}}}],["l'application",{"_index":949,"title":{},"body":{"index.html":{}}}],["l\\'accueil",{"_index":831,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["la",{"_index":243,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/NotFoundComponent.html":{},"injectables/VictoryCheckService.html":{},"index.html":{}}}],["label",{"_index":711,"title":{},"body":{"components/HomepageComponent.html":{}}}],["last",{"_index":310,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["layout",{"_index":516,"title":{},"body":{"modules/GameModule.html":{},"modules/HomepageModule.html":{},"dependencies.html":{}}}],["layout/header/header.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["le",{"_index":387,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["left",{"_index":495,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["les",{"_index":875,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["ligne",{"_index":617,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{},"index.html":{}}}],["lignes",{"_index":693,"title":{},"body":{"components/HomepageComponent.html":{}}}],["line",{"_index":835,"title":{},"body":{"interfaces/Pawn.html":{}}}],["lineplayed",{"_index":611,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["link",{"_index":672,"title":{},"body":{"components/HomepageComponent.html":{}}}],["list",{"_index":773,"title":{},"body":{"modules/MaterialModule.html":{}}}],["liste",{"_index":418,"title":{},"body":{"components/GameComponent.html":{}}}],["loadchildren",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":684,"title":{},"body":{"components/HomepageComponent.html":{}}}],["m.gamemodule",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["margin",{"_index":458,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["mat",{"_index":251,"title":{},"body":{"components/EndGameComponent.html":{},"components/HomepageComponent.html":{}}}],["mat_dialog_data",{"_index":236,"title":{},"body":{"components/EndGameComponent.html":{}}}],["matautocompletemodule",{"_index":745,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":747,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":749,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":752,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":754,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":756,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":241,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["matcheckboxmodule",{"_index":758,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matchipsmodule",{"_index":760,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":764,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":358,"title":{},"body":{"components/GameComponent.html":{}}}],["matdialogmodule",{"_index":766,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":767,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{}}}],["materialmodule",{"_index":83,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":769,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":771,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":774,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":776,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":778,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":780,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":782,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":785,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":787,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":789,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":791,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":783,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":793,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":795,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":797,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":799,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":355,"title":{},"body":{"components/GameComponent.html":{}}}],["matsnackbarmodule",{"_index":801,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":802,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":762,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":804,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":806,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":808,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":810,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":812,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":456,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["methods",{"_index":282,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{},"injectables/VictoryCheckService.html":{}}}],["min",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["model",{"_index":575,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["models/game",{"_index":361,"title":{},"body":{"components/GameComponent.html":{}}}],["models/pawn",{"_index":362,"title":{},"body":{"components/GameComponent.html":{}}}],["models/player",{"_index":367,"title":{},"body":{"components/GameComponent.html":{}}}],["module",{"_index":74,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{}}],["modules",{"_index":76,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["n'existe",{"_index":821,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["n\\'existe",{"_index":830,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["navigate",{"_index":670,"title":{},"body":{"components/HomepageComponent.html":{}}}],["navigatetoexternalurl",{"_index":666,"title":{},"body":{"components/HomepageComponent.html":{}}}],["navigatetoexternalurl(link",{"_index":668,"title":{},"body":{"components/HomepageComponent.html":{}}}],["new",{"_index":569,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"coverage.html":{}}}],["next",{"_index":331,"title":{},"body":{"components/GameComponent.html":{}}}],["ng",{"_index":708,"title":{},"body":{"components/HomepageComponent.html":{}}}],["ngmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["ngoninit",{"_index":370,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{}}}],["ngxs.config",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/storage",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"dependencies.html":{}}}],["ngxsconfig",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule.forroot([themestate",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsstoragepluginmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["nombre",{"_index":402,"title":{},"body":{"components/GameComponent.html":{}}}],["none",{"_index":498,"title":{},"body":{"components/GameComponent.html":{}}}],["notfoundcomponent",{"_index":67,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":276,"title":{},"body":{"interfaces/Game.html":{},"interfaces/Player.html":{}}}],["nul",{"_index":242,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["number",{"_index":268,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/VictoryCheckService.html":{}}}],["object",{"_index":685,"title":{},"body":{"components/HomepageComponent.html":{}}}],["observable",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["occuper",{"_index":413,"title":{},"body":{"components/GameComponent.html":{}}}],["ok",{"_index":397,"title":{},"body":{"components/GameComponent.html":{}}}],["one",{"_index":273,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"interfaces/Player.html":{}}}],["oninit",{"_index":279,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{}}}],["opacity",{"_index":177,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["openendgamedialog",{"_index":290,"title":{},"body":{"components/GameComponent.html":{}}}],["openendgamedialog(winner",{"_index":333,"title":{},"body":{"components/GameComponent.html":{}}}],["optional",{"_index":220,"title":{},"body":{"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"components/HomepageComponent.html":{},"interfaces/Pawn.html":{},"injectables/ThemeState.html":{},"injectables/VictoryCheckService.html":{}}}],["ordonne",{"_index":884,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["oups",{"_index":820,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["out",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{},"overview.html":{}}}],["outline",{"_index":184,"title":{},"body":{"components/CaseComponent.html":{}}}],["overflow",{"_index":252,"title":{},"body":{"components/EndGameComponent.html":{}}}],["overlaymodule",{"_index":814,"title":{},"body":{"modules/MaterialModule.html":{}}}],["overview",{"_index":970,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":425,"title":{},"body":{"components/GameComponent.html":{}}}],["p.player.id",{"_index":882,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["p.x",{"_index":410,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["p.y",{"_index":424,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["package",{"_index":928,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":193,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["page",{"_index":681,"title":{},"body":{"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["par",{"_index":414,"title":{},"body":{"components/GameComponent.html":{}}}],["param",{"_index":239,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["parameter",{"_index":218,"title":{},"body":{"components/EndGameComponent.html":{}}}],["parameters",{"_index":219,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{},"injectables/VictoryCheckService.html":{}}}],["paramètres",{"_index":422,"title":{},"body":{"components/GameComponent.html":{}}}],["pas",{"_index":822,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["passée",{"_index":407,"title":{},"body":{"components/GameComponent.html":{}}}],["patchstate",{"_index":587,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["path",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageRoutingModule.html":{}}}],["pathmatch",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pawn",{"_index":164,"title":{"interfaces/Pawn.html":{}},"body":{"components/CaseComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"interfaces/Pawn.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["pawn.y",{"_index":912,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["pawncolor",{"_index":440,"title":{},"body":{"components/GameComponent.html":{}}}],["pawnlist",{"_index":892,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["pawnlist[index",{"_index":893,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["pawnplayed",{"_index":610,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["pawnplayed.player",{"_index":620,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["pawnplayed.player.id",{"_index":883,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["pawnplayed.x",{"_index":614,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["pawnplayed.y",{"_index":612,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["pawns",{"_index":263,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["pawnsincolumn",{"_index":399,"title":{},"body":{"components/GameComponent.html":{}}}],["pawnslist",{"_index":605,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["pawntoanimate",{"_index":442,"title":{},"body":{"components/GameComponent.html":{}}}],["pawntoanimate.classlist.add(\"show",{"_index":446,"title":{},"body":{"components/GameComponent.html":{}}}],["pawntoanimate.classlist.remove(\"show",{"_index":451,"title":{},"body":{"components/GameComponent.html":{}}}],["pawntoanimate.style.top",{"_index":448,"title":{},"body":{"components/GameComponent.html":{}}}],["pawntodisplay",{"_index":416,"title":{},"body":{"components/GameComponent.html":{}}}],["payload",{"_index":588,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["pion",{"_index":415,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["pions",{"_index":404,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["play",{"_index":275,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{}}}],["played",{"_index":271,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"interfaces/Pawn.html":{},"injectables/VictoryCheckService.html":{}}}],["playedpawn",{"_index":318,"title":{},"body":{"components/GameComponent.html":{}}}],["playedpawn.y",{"_index":382,"title":{},"body":{"components/GameComponent.html":{}}}],["player",{"_index":215,"title":{"interfaces/Player.html":{}},"body":{"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["player.id",{"_index":441,"title":{},"body":{"components/GameComponent.html":{}}}],["player1",{"_index":264,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["player2",{"_index":265,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["playercolumn",{"_index":880,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playercolumn.map((pawn",{"_index":891,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playercolumn.sort((a,b",{"_index":886,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playerpawns",{"_index":908,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playerpawns.map((pawn",{"_index":910,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playerpawns.sort((a,b",{"_index":909,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playerrow",{"_index":899,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playerrow.map((pawn",{"_index":903,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["playerrow.sort((a,b",{"_index":900,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["players",{"_index":577,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["playpawn",{"_index":291,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["playpawn(column",{"_index":338,"title":{},"body":{"components/GameComponent.html":{}}}],["playpawn(undefined",{"_index":555,"title":{},"body":{"injectables/GameState.html":{}}}],["playpawn({getstate",{"_index":604,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["pleine",{"_index":246,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["plugin",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["portalmodule",{"_index":735,"title":{},"body":{"modules/MaterialModule.html":{}}}],["position",{"_index":173,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{}}}],["pour",{"_index":615,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["present",{"_index":322,"title":{},"body":{"components/GameComponent.html":{}}}],["private",{"_index":285,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{}}}],["properties",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"classes/ThemeStateModel.html":{}}}],["provide",{"_index":857,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["providedin",{"_index":874,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["providers",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":209,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["puissance",{"_index":653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["puissance4",{"_index":946,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":836,"title":{},"body":{"interfaces/Pawn.html":{}}}],["put",{"_index":327,"title":{},"body":{"components/GameComponent.html":{}}}],["qui",{"_index":877,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["quit",{"_index":435,"title":{},"body":{"components/GameComponent.html":{}}}],["quitter",{"_index":247,"title":{},"body":{"components/EndGameComponent.html":{}}}],["radius",{"_index":467,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["red",{"_index":197,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["redirectto",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redwins",{"_index":210,"title":{},"body":{"components/EndGameComponent.html":{}}}],["register",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["registerwhenstable:30000",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["rejouer",{"_index":248,"title":{},"body":{"components/EndGameComponent.html":{}}}],["relative",{"_index":174,"title":{},"body":{"components/CaseComponent.html":{}}}],["remove",{"_index":309,"title":{},"body":{"components/GameComponent.html":{}}}],["removes",{"_index":347,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["repeat(11",{"_index":475,"title":{},"body":{"components/GameComponent.html":{}}}],["repeat(13",{"_index":477,"title":{},"body":{"components/GameComponent.html":{}}}],["repeat(15",{"_index":479,"title":{},"body":{"components/GameComponent.html":{}}}],["repeat(5",{"_index":470,"title":{},"body":{"components/GameComponent.html":{}}}],["repeat(7",{"_index":463,"title":{},"body":{"components/GameComponent.html":{}}}],["repeat(9",{"_index":473,"title":{},"body":{"components/GameComponent.html":{}}}],["replay",{"_index":438,"title":{},"body":{"components/GameComponent.html":{}}}],["represents",{"_index":260,"title":{},"body":{"interfaces/Game.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{}}}],["reset",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"modules/HomepageModule.html":{},"overview.html":{}}}],["resetgame",{"_index":292,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{}}}],["resetgame(undefined",{"_index":559,"title":{},"body":{"injectables/GameState.html":{}}}],["resetgame({getstate",{"_index":593,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["resets",{"_index":680,"title":{},"body":{"components/HomepageComponent.html":{}}}],["result",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["results",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["retourne",{"_index":412,"title":{},"body":{"components/GameComponent.html":{}}}],["retrieves",{"_index":846,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["return",{"_index":398,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["returns",{"_index":304,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{},"injectables/VictoryCheckService.html":{}}}],["revenir",{"_index":823,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["right",{"_index":482,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["rotate(45deg",{"_index":712,"title":{},"body":{"components/HomepageComponent.html":{}}}],["rouges",{"_index":227,"title":{},"body":{"components/EndGameComponent.html":{}}}],["router",{"_index":366,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["routermodule",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":518,"title":{},"body":{"modules/GameRoutingModule.html":{},"modules/HomepageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":137,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{}}}],["routing.module.ts",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GameRoutingModule.html":{},"modules/HomepageRoutingModule.html":{}}}],["row",{"_index":294,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["rowplayed",{"_index":868,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["rows",{"_index":266,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{}}}],["rxjs",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":360,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{}}}],["récupère",{"_index":401,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["scale(0",{"_index":714,"title":{},"body":{"components/HomepageComponent.html":{}}}],["scrollingmodule",{"_index":737,"title":{},"body":{"modules/MaterialModule.html":{}}}],["seconds",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["select",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["select(gamestate.getcolumns",{"_index":682,"title":{},"body":{"components/HomepageComponent.html":{}}}],["select(gamestate.getgame",{"_index":348,"title":{},"body":{"components/GameComponent.html":{}}}],["select(gamestate.getrows",{"_index":686,"title":{},"body":{"components/HomepageComponent.html":{}}}],["select(themestate.gettheme",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["selected",{"_index":269,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["service",{"_index":538,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["services/victory",{"_index":573,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["serviceworker",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":166,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["setcolumns",{"_index":527,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{}}}],["setcolumns(event",{"_index":673,"title":{},"body":{"components/HomepageComponent.html":{}}}],["setcolumns(event.value",{"_index":689,"title":{},"body":{"components/HomepageComponent.html":{}}}],["setcolumns(undefined",{"_index":562,"title":{},"body":{"injectables/GameState.html":{}}}],["setcolumns({getstate",{"_index":592,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["setrows",{"_index":528,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{}}}],["setrows(event",{"_index":677,"title":{},"body":{"components/HomepageComponent.html":{}}}],["setrows(event.value",{"_index":690,"title":{},"body":{"components/HomepageComponent.html":{}}}],["setrows(undefined",{"_index":565,"title":{},"body":{"injectables/GameState.html":{}}}],["setrows({getstate",{"_index":591,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["sets",{"_index":311,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["settimeout",{"_index":447,"title":{},"body":{"components/GameComponent.html":{}}}],["shadow",{"_index":189,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["sheet",{"_index":751,"title":{},"body":{"modules/MaterialModule.html":{}}}],["show",{"_index":230,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["shown",{"_index":205,"title":{},"body":{"components/EndGameComponent.html":{}}}],["shows",{"_index":335,"title":{},"body":{"components/GameComponent.html":{}}}],["si",{"_index":385,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["size",{"_index":182,"title":{},"body":{"components/CaseComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["slider",{"_index":675,"title":{},"body":{"components/HomepageComponent.html":{}}}],["small",{"_index":697,"title":{},"body":{"components/HomepageComponent.html":{}}}],["snackbar",{"_index":341,"title":{},"body":{"components/GameComponent.html":{}}}],["solid",{"_index":186,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{}}}],["soon",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/GameRoutingModule.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"modules/HomepageModule.html":{},"modules/HomepageRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NotFoundComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["spinner",{"_index":790,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/app",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/game/case/case.component.ts",{"_index":154,"title":{},"body":{"components/CaseComponent.html":{},"coverage.html":{}}}],["src/app/game/case/case.component.ts:18",{"_index":165,"title":{},"body":{"components/CaseComponent.html":{}}}],["src/app/game/dialogs/end",{"_index":201,"title":{},"body":{"components/EndGameComponent.html":{},"coverage.html":{}}}],["src/app/game/game",{"_index":517,"title":{},"body":{"modules/GameRoutingModule.html":{}}}],["src/app/game/game.component.ts",{"_index":277,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["src/app/game/game.component.ts:117",{"_index":329,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:133",{"_index":321,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:151",{"_index":313,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:163",{"_index":334,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:190",{"_index":295,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:29",{"_index":349,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:35",{"_index":351,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:41",{"_index":354,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:63",{"_index":332,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:73",{"_index":343,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:80",{"_index":306,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:88",{"_index":339,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.module.ts",{"_index":510,"title":{},"body":{"modules/GameModule.html":{}}}],["src/app/homepage/homepage",{"_index":726,"title":{},"body":{"modules/HomepageRoutingModule.html":{}}}],["src/app/homepage/homepage.component.ts",{"_index":663,"title":{},"body":{"components/HomepageComponent.html":{},"coverage.html":{}}}],["src/app/homepage/homepage.component.ts:23",{"_index":687,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:29",{"_index":683,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:41",{"_index":679,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:49",{"_index":674,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:56",{"_index":678,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:64",{"_index":669,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.module.ts",{"_index":722,"title":{},"body":{"modules/HomepageModule.html":{}}}],["src/app/layout/header/header.component.ts",{"_index":630,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts:22",{"_index":645,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:41",{"_index":643,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:49",{"_index":637,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/material/material.module.ts",{"_index":727,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/game",{"_index":571,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["src/app/models/game.ts",{"_index":259,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/models/pawn",{"_index":170,"title":{},"body":{"components/CaseComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["src/app/models/pawn.ts",{"_index":832,"title":{},"body":{"interfaces/Pawn.html":{},"coverage.html":{}}}],["src/app/models/player",{"_index":238,"title":{},"body":{"components/EndGameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["src/app/models/player.ts",{"_index":839,"title":{},"body":{"interfaces/Player.html":{},"coverage.html":{}}}],["src/app/not",{"_index":816,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/store/game/game.state.ts",{"_index":521,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"coverage.html":{}}}],["src/app/store/game/game.state.ts:105",{"_index":564,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:121",{"_index":561,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:136",{"_index":532,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:15",{"_index":629,"title":{},"body":{"classes/GameStateModel.html":{}}}],["src/app/store/game/game.state.ts:156",{"_index":557,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:176",{"_index":536,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:45",{"_index":570,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:51",{"_index":547,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:59",{"_index":549,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:67",{"_index":545,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:75",{"_index":553,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/game/game.state.ts:89",{"_index":567,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/store/services/victory",{"_index":855,"title":{},"body":{"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["src/app/store/theme/theme.state.ts",{"_index":841,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"coverage.html":{}}}],["src/app/store/theme/theme.state.ts:12",{"_index":854,"title":{},"body":{"classes/ThemeStateModel.html":{}}}],["src/app/store/theme/theme.state.ts:31",{"_index":845,"title":{},"body":{"injectables/ThemeState.html":{}}}],["src/app/store/theme/theme.state.ts:39",{"_index":850,"title":{},"body":{"injectables/ThemeState.html":{}}}],["stable",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":346,"title":{},"body":{"components/GameComponent.html":{}}}],["started",{"_index":945,"title":{"index.html":{}},"body":{}}],["startgame",{"_index":667,"title":{},"body":{"components/HomepageComponent.html":{}}}],["state",{"_index":261,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["state.dark",{"_index":852,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["state.game",{"_index":583,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.columns",{"_index":585,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.pawns",{"_index":606,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.pawns.slice(0",{"_index":596,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.player1",{"_index":590,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.player1.id",{"_index":602,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.player2",{"_index":603,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.rows",{"_index":584,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["state.game.turn?.id",{"_index":601,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["statecontext",{"_index":530,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["statements",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":523,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["sticky",{"_index":656,"title":{},"body":{"components/HeaderComponent.html":{}}}],["store",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["store.game.game.columns",{"_index":393,"title":{},"body":{"components/GameComponent.html":{}}}],["store.game.game.rows",{"_index":392,"title":{},"body":{"components/GameComponent.html":{}}}],["store/game/game.actions",{"_index":363,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["store/game/game.state",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["store/theme/theme.actions",{"_index":646,"title":{},"body":{"components/HeaderComponent.html":{}}}],["store/theme/theme.state",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["string",{"_index":222,"title":{},"body":{"components/EndGameComponent.html":{},"components/HomepageComponent.html":{},"interfaces/Player.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["subscribe",{"_index":380,"title":{},"body":{"components/GameComponent.html":{}}}],["support",{"_index":965,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":389,"title":{},"body":{"components/GameComponent.html":{},"index.html":{}}}],["svg",{"_index":966,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":434,"title":{},"body":{"components/GameComponent.html":{}}}],["sync",{"_index":455,"title":{},"body":{"components/GameComponent.html":{}}}],["table",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":885,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":640,"title":{},"body":{"components/HeaderComponent.html":{}}}],["take",{"_index":359,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{}}}],["takes",{"_index":217,"title":{},"body":{"components/EndGameComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["termine",{"_index":386,"title":{},"body":{"components/GameComponent.html":{}}}],["tester",{"_index":947,"title":{},"body":{"index.html":{}}}],["text",{"_index":229,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["theme",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["theme.actions",{"_index":851,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["themestate",{"_index":39,"title":{"injectables/ThemeState.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"coverage.html":{}}}],["themestatemodel",{"_index":844,"title":{"classes/ThemeStateModel.html":{}},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"coverage.html":{}}}],["theming",{"_index":642,"title":{},"body":{"components/HeaderComponent.html":{}}}],["there's",{"_index":542,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["this._snack.open(error.message",{"_index":396,"title":{},"body":{"components/GameComponent.html":{}}}],["this.animatefallingpawn(playedpawn.x",{"_index":381,"title":{},"body":{"components/GameComponent.html":{}}}],["this.applydarktheme",{"_index":648,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.checkvictory(playedpawn",{"_index":383,"title":{},"body":{"components/GameComponent.html":{}}}],["this.dark.pipe(take(1)).subscribe(isdark",{"_index":649,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialog.open(endgamecomponent",{"_index":429,"title":{},"body":{"components/GameComponent.html":{}}}],["this.game.pipe(take(1)).subscribe(g",{"_index":372,"title":{},"body":{"components/GameComponent.html":{}}}],["this.getypositionincolumn(column",{"_index":378,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gridx",{"_index":373,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gridy",{"_index":375,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gridy.length",{"_index":449,"title":{},"body":{"components/GameComponent.html":{}}}],["this.initgame",{"_index":371,"title":{},"body":{"components/GameComponent.html":{}}}],["this.openendgamedialog(store.game.game.winner",{"_index":394,"title":{},"body":{"components/GameComponent.html":{}}}],["this.resetgame",{"_index":439,"title":{},"body":{"components/GameComponent.html":{}}}],["this.router.navigate(['game",{"_index":688,"title":{},"body":{"components/HomepageComponent.html":{}}}],["this.router.navigate(['home",{"_index":436,"title":{},"body":{"components/GameComponent.html":{}}}],["this.store.dispatch(new",{"_index":377,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["throw",{"_index":598,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["thumb",{"_index":710,"title":{},"body":{"components/HomepageComponent.html":{}}}],["title",{"_index":256,"title":{},"body":{"components/EndGameComponent.html":{},"components/HomepageComponent.html":{}}}],["toggle",{"_index":755,"title":{},"body":{"modules/MaterialModule.html":{}}}],["toogle",{"_index":644,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toogletheme",{"_index":636,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["toogletheme(undefined",{"_index":848,"title":{},"body":{"injectables/ThemeState.html":{}}}],["toogletheme({getstate",{"_index":853,"title":{},"body":{"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{}}}],["top",{"_index":490,"title":{},"body":{"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["tous",{"_index":907,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["train",{"_index":660,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomepageComponent.html":{}}}],["transform",{"_index":493,"title":{},"body":{"components/GameComponent.html":{},"components/HomepageComponent.html":{}}}],["transition",{"_index":496,"title":{},"body":{"components/GameComponent.html":{}}}],["translatex",{"_index":494,"title":{},"body":{"components/GameComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["true",{"_index":432,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Pawn.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{}}}],["truncatedpawns",{"_index":595,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["tslib",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":267,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["two",{"_index":274,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["type",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"interfaces/Pawn.html":{},"interfaces/Player.html":{},"injectables/ThemeState.html":{},"classes/ThemeStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["un",{"_index":390,"title":{},"body":{"components/GameComponent.html":{}}}],["undefined",{"_index":534,"title":{},"body":{"injectables/GameState.html":{}}}],["undo",{"_index":454,"title":{},"body":{"components/GameComponent.html":{}}}],["une",{"_index":616,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["up",{"_index":299,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["update",{"_index":541,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["url(\"/assets/img/empty",{"_index":180,"title":{},"body":{"components/CaseComponent.html":{}}}],["url(\"/assets/img/red",{"_index":198,"title":{},"body":{"components/CaseComponent.html":{}}}],["url(\"/assets/img/yellow",{"_index":200,"title":{},"body":{"components/CaseComponent.html":{}}}],["used",{"_index":840,"title":{},"body":{"interfaces/Player.html":{}}}],["uses",{"_index":537,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["value",{"_index":224,"title":{},"body":{"components/EndGameComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{},"classes/ThemeStateModel.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["vertical",{"_index":330,"title":{},"body":{"components/GameComponent.html":{}}}],["verticalcheck",{"_index":861,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["verticalcheck(game",{"_index":871,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["verticale",{"_index":618,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["verticalement",{"_index":898,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["vertically",{"_index":873,"title":{},"body":{"injectables/VictoryCheckService.html":{}}}],["victoire",{"_index":225,"title":{},"body":{"components/EndGameComponent.html":{}}}],["victory",{"_index":317,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["victorycheckservice",{"_index":568,"title":{"injectables/VictoryCheckService.html":{}},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{},"injectables/VictoryCheckService.html":{},"coverage.html":{}}}],["victoryservice",{"_index":522,"title":{},"body":{"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["void",{"_index":305,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"components/HeaderComponent.html":{},"components/HomepageComponent.html":{},"injectables/ThemeState.html":{}}}],["vérif",{"_index":384,"title":{},"body":{"components/GameComponent.html":{}}}],["weight",{"_index":825,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["whichever",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["wich",{"_index":326,"title":{},"body":{"components/GameComponent.html":{}}}],["width",{"_index":175,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{},"components/HomepageComponent.html":{},"components/NotFoundComponent.html":{}}}],["win",{"_index":221,"title":{},"body":{"components/EndGameComponent.html":{},"interfaces/Game.html":{}}}],["win__image",{"_index":249,"title":{},"body":{"components/EndGameComponent.html":{}}}],["window.location.href",{"_index":691,"title":{},"body":{"components/HomepageComponent.html":{}}}],["winner",{"_index":211,"title":{},"body":{"components/EndGameComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"classes/GameStateModel.html":{}}}],["winning",{"_index":834,"title":{},"body":{"interfaces/Pawn.html":{}}}],["wins",{"_index":231,"title":{},"body":{"components/EndGameComponent.html":{}}}],["won",{"_index":337,"title":{},"body":{"components/GameComponent.html":{},"injectables/VictoryCheckService.html":{}}}],["worker",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["x",{"_index":325,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Pawn.html":{}}}],["y",{"_index":320,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Pawn.html":{}}}],["yellow",{"_index":199,"title":{},"body":{"components/CaseComponent.html":{},"components/EndGameComponent.html":{},"components/GameComponent.html":{}}}],["yellowwins",{"_index":212,"title":{},"body":{"components/EndGameComponent.html":{}}}],["yes",{"_index":336,"title":{},"body":{"components/GameComponent.html":{}}}],["z",{"_index":176,"title":{},"body":{"components/CaseComponent.html":{},"components/GameComponent.html":{}}}],["zone.js",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomepageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(ThemeState.getTheme)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n            \n                \n                    Get theme from the store, gets applied in the template\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ThemeState } from './store/theme/theme.state';\n\n/**\n * App component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Get theme from the store, gets applied in the template\n   */\n  @Select(ThemeState.getTheme) isDarkTheme!: Observable;\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .app{\n    min-height: 100%;\n\n    &__container{\n        height: calc(100vh - 84px);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { ngxsConfig } from './ngxs.config';\nimport { ThemeState } from './store/theme/theme.state';\nimport { GameState } from './store/game/game.state';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    NgxsModule.forRoot([ThemeState, GameState], ngxsConfig),\n    NgxsStoragePluginModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: () => \"import('./homepage/homepage.module').then(m => m.HomepageModule)\"\n  },\n  {\n    path: 'game',\n    loadChildren: () => \"import('./game/game.module').then(m => m.GameModule)\"\n  },\n  {\n    path: '404', \n    component: NotFoundComponent\n  },\n  {\n    path: '**', \n    redirectTo: '/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CaseComponent.html":{"url":"components/CaseComponent.html","title":"component - CaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/case/case.component.ts\n\n\n\n    \n        Description\n    \n    \n        Case component, all the cells that composes the game grid\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-case\n            \n\n            \n                styleUrls\n                ./case.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./case.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pawn\n                    \n                \n                \n                    \n                        Type :         Pawn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/case/case.component.ts:18\n                            \n                        \n                \n                    \n                        Pawn to set in the cell\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Pawn } from 'src/app/models/pawn';\n\n/**\n * Case component, all the cells that composes the game grid\n */\n@Component({\n  selector: 'app-case',\n  templateUrl: './case.component.html',\n  styleUrls: ['./case.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CaseComponent {\n  /**\n   * Pawn to set in the cell\n   * @type {Pawn}\n   */\n  @Input('pawn') pawn!: Pawn;\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./case.component.scss\n                \n                :host{\n    position: relative;\n}\n\n.case{\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 100;\n    opacity: 1;\n    background: url(\"/assets/img/empty-case.png\");\n    background-size: contain;\n    outline: 1px solid #2867b2;\n    box-shadow: 2px 2px 2px #2867b2, -2px -2px 2px #2867b2, 2px -2px 2px #2867b2, -2px 2px 2px #2867b2;\n\n    &:before{\n        content: \"\";\n        padding-bottom: 100%;\n        display: block;\n        outline: 1px solid #2867b2;\n    }\n\n    &--pawn-red{\n        background: url(\"/assets/img/red-case.png\");\n        background-size: contain;\n    }\n\n    &--pawn-yellow{\n        background: url(\"/assets/img/yellow-case.png\");\n        background-size: contain;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndGameComponent.html":{"url":"components/EndGameComponent.html","title":"component - EndGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/dialogs/end-game/end-game.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog component, shown when the game ends\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-end-game\n            \n\n            \n                styleUrls\n                ./end-game.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./end-game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                redWins\n                            \n                            \n                                    Public\n                                winner\n                            \n                            \n                                    Public\n                                yellowWins\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(winner: Player)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/dialogs/end-game/end-game.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor takes winner in parameter\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        winner\n                                                  \n                                                        \n                                                                        Player\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the player that did win the game (from the store)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redWins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Victoire des rouges !\"\n                    \n                \n                    \n                        \n                                Defined in src/app/game/dialogs/end-game/end-game.component.ts:19\n                        \n                    \n\n            \n                \n                    Text to show when red wins\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        winner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/game/dialogs/end-game/end-game.component.ts:29\n                        \n                    \n\n            \n                \n                    the player that did win the game (from the store)\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        yellowWins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Victoire des jaunes !\"\n                    \n                \n                    \n                        \n                                Defined in src/app/game/dialogs/end-game/end-game.component.ts:23\n                        \n                    \n\n            \n                \n                    Text to show when yellow wins\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Player } from 'src/app/models/player';\n\n/**\n * Dialog component, shown when the game ends\n */\n@Component({\n  selector: 'app-end-game',\n  templateUrl: './end-game.component.html',\n  styleUrls: ['./end-game.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EndGameComponent{\n\n  /**\n   * Text to show when red wins\n   */\n  public redWins: string = \"Victoire des rouges !\";\n  /**\n   * Text to show when yellow wins\n   */\n  public yellowWins: string = \"Victoire des jaunes !\";\n\n  /**\n   * Constructor takes winner in parameter\n   * @param {Player} winner the player that did win the game (from the store) \n   */\n  constructor(@Inject(MAT_DIALOG_DATA) public winner: Player) {}\n\n}\n\n    \n\n    \n        \n     Victoire des Rouges !\n     Victoire des Jaunes !\n\nMatch nul !La grille est pleine...\n\n    \n        \n        \n    \n    \n\n\n  Quitter\n  Rejouer\n\n\n    \n\n    \n                \n                    ./end-game.component.scss\n                \n                .win__image{\n    width: 80%;\n}\n\n.mat-dialog-content{\n    overflow: hidden;\n    text-align: center;\n}\n\n.mat-dialog-title{\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Victoire des Rouges !     Victoire des Jaunes !Match nul !La grille est pleine...                              Quitter  Rejouer'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/game.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the game state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            pawns\n                                        \n                                \n                                \n                                        \n                                            player1\n                                        \n                                \n                                \n                                        \n                                            player2\n                                        \n                                \n                                \n                                        \n                                            rows\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            turn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            winner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    number of columns of the grid, to be selected on the homepage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pawns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pawns:         Pawn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pawn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pawns that have been played since the game began\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player1:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    player one\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player2:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    player two\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    number of rows of the grid, to be selected on the homepage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        turn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        turn:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    player that have to play now\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winner:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    player that did win the game\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Pawn } from \"./pawn\";\nimport { Player } from \"./player\";\n\n/**\n * Represents the game state\n */\nexport interface Game {\n    /**\n     * player one\n     */\n    player1: Player;\n\n    /**\n     * player two\n     */\n    player2: Player;\n\n    /**\n     * player that have to play now\n     */\n    turn?: Player;\n\n    /**\n     * player that did win the game\n     */\n    winner?: Player;\n\n    /**\n     * number of rows of the grid, to be selected on the homepage\n     */\n    rows: number;\n\n    /**\n     * number of columns of the grid, to be selected on the homepage\n     */\n    columns: number;\n\n    /**\n     * Pawns that have been played since the game began\n     */\n    pawns: Pawn[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/game.component.ts\n\n\n\n    \n        Description\n    \n    \n        Game component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                    Public\n                                gridX\n                            \n                            \n                                    Public\n                                gridY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animateFallingPawn\n                            \n                            \n                                cancelLastMove\n                            \n                            \n                                    Private\n                                checkVictory\n                            \n                            \n                                    Public\n                                displayPawn\n                            \n                            \n                                    Private\n                                getYPositionInColumn\n                            \n                            \n                                    Private\n                                initGame\n                            \n                            \n                                    Public\n                                openEndGameDialog\n                            \n                            \n                                    Public\n                                playPawn\n                            \n                            \n                                resetGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animateFallingPawn\n                        \n                    \n                \n            \n            \n                \nanimateFallingPawn(column: number, row: number, player: Player)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:190\n                \n            \n\n\n            \n                \n                    Animate a falling pawn in the column played, falling up to the row where the pawn will fall\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        column played\n\n                                    \n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row where the animation ends\n\n                                    \n                                \n                                \n                                    player\n                                    \n                                                Player\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        player that played to determine the color of the pawn to animate\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelLastMove\n                        \n                    \n                \n            \n            \n                \ncancelLastMove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:80\n                \n            \n\n\n            \n                \n                    Dispatch CancelLastMove Action from the store, remove last pawn played and sets turn to the last player\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkVictory\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkVictory(playedPawn: Pawn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:151\n                \n            \n\n\n            \n                \n                    Dispatch CheckWinner Action from the store, checks if played pawn causes a victory\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    playedPawn\n                                    \n                                                Pawn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pawn that was just played\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        displayPawn\n                        \n                    \n                \n            \n            \n                \n                    \n                    displayPawn(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:133\n                \n            \n\n\n            \n                \n                    Get a Pawn if present on given coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        column in wich the pawns will be put\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row in wich the pawns will be put\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Pawn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getYPositionInColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    getYPositionInColumn(column: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:117\n                \n            \n\n\n            \n                \n                    Get the number of pawns in a column to set the vertical position of the next pawn that will be played in that column\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        column in wich the pawns will be put\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    initGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:63\n                \n            \n\n\n            \n                \n                    Get rows and columns to set from the store\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openEndGameDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openEndGameDialog(winner?: Player)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:163\n                \n            \n\n\n            \n                \n                    Shows the end game dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    winner\n                                    \n                                                Player\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        player that played that last pawn and won\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        playPawn\n                        \n                    \n                \n            \n            \n                \n                    \n                    playPawn(column: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:88\n                \n            \n\n\n            \n                \n                    Play a pawn if the column played isn't full (shows a snackbar if so), end games if the grid is full or if the player won\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        column in wich the pawns will be put\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGame\n                        \n                    \n                \n            \n            \n                \nresetGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:73\n                \n            \n\n\n            \n                \n                    Dispatch GameReset Action from the store, fresh start (removes all the pawns and set turn to player one)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(GameState.getGame)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:29\n                        \n                    \n\n            \n                \n                    Game State from the store\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gridX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:35\n                        \n                    \n\n            \n                \n                    Number of columns, doesn't get any actual pawn in it\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gridY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:41\n                        \n                    \n\n            \n                \n                    Number of rows, doesn't get any actual pawn in it\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Game } from '../models/game';\nimport { Pawn } from '../models/pawn';\nimport { CheckWinner, GameReset, PlayPawn, CancelLastMove } from '../store/game/game.actions';\nimport { GameState } from '../store/game/game.state';\nimport { EndGameComponent } from './dialogs/end-game/end-game.component';\nimport { Router } from '@angular/router';\nimport { Player } from '../models/player';\n\n/**\n * Game component\n */\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n  /**\n   * Game State from the store\n   * @type {Observable}\n   */\n  @Select(GameState.getGame) game!: Observable;\n\n  /**\n   * Number of columns, doesn't get any actual pawn in it\n   * @type {Array}\n   */\n  public gridX: Array = [];\n\n  /**\n   * Number of rows, doesn't get any actual pawn in it\n   * @type {Array}\n   */\n  public gridY: Array = [];\n\n  /**\n   * @ignore\n   */\n  constructor(\n    private store: Store,\n    private _snack: MatSnackBar,\n    private dialog: MatDialog,\n    private router: Router\n    ) { }\n\n    /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.initGame();\n  }\n\n  /**\n   * Get rows and columns to set from the store\n   */\n  private initGame(){\n    this.game.pipe(take(1)).subscribe(g => {\n      this.gridX = Array(g!.columns);\n      this.gridY = Array(g!.rows);\n    });\n  }\n\n  /**\n   * Dispatch GameReset Action from the store, fresh start (removes all the pawns and set turn to player one)\n   */\n  resetGame(){\n    this.store.dispatch(new GameReset());\n  }\n\n  /**\n   * Dispatch CancelLastMove Action from the store, remove last pawn played and sets turn to the last player\n   */\n  cancelLastMove(){\n    this.store.dispatch(new CancelLastMove());\n  }\n\n  /**\n   * Play a pawn if the column played isn't full (shows a snackbar if so), end games if the grid is full or if the player won\n   * @param {number} column column in wich the pawns will be put\n   */\n  public playPawn(column: number){\n    this.game.pipe(take(1)).subscribe(g => {\n      const playedPawn: Pawn = {\n        x: column,\n        y: this.getYPositionInColumn(column),\n        player: g.turn!\n      }\n      this.store.dispatch(new PlayPawn( playedPawn )).subscribe(\n        (store) => {\n          this.animateFallingPawn(playedPawn.x, playedPawn.y, g.turn!);\n          this.checkVictory(playedPawn);\n\n          // Vérif : Si la grille est pleine, on termine le jeu sur un match nul\n          if(store.game.game.pawns?.length === store.game.game.rows * store.game.game.columns){\n            this.openEndGameDialog(store.game.game.winner);\n          }\n        },\n        error => {\n          this._snack.open(error.message, \"OK\");\n        }\n      );\n    })\n  }\n\n  /**\n   * Get the number of pawns in a column to set the vertical position of the next pawn that will be played in that column\n   * @param {number} column column in wich the pawns will be put\n   * @return {number}\n   */\n  private getYPositionInColumn(column: number): number{\n    let pawnsInColumn: number = 0;\n    this.game.pipe(take(1)).subscribe(g => {\n      // On récupère le nombre de pions dans la colonne passée en param\n      pawnsInColumn = g.pawns.filter(p => p.x === column).length;\n    });\n    // on retourne la position en Y à occuper par le pion\n    return pawnsInColumn;\n  }\n\n  /**\n   * Get a Pawn if present on given coordinates\n   * @param {number} x column in wich the pawns will be put\n   * @param {number} y row in wich the pawns will be put\n   * @return {Pawn}\n   */\n  public displayPawn(x: number, y: number): Pawn{\n    let pawnToDisplay!: Pawn;\n    \n    this.game.pipe(take(1)).subscribe(g => {\n      // On check dans la liste de pions du store si on en a un aux coordonnées de la case passée en paramètres\n      g.pawns.map(p => {\n        if (p.x === x && p.y === y) {\n          pawnToDisplay = p;\n        }\n      });\n    });\n    return pawnToDisplay;\n  }\n\n  /**\n   * Dispatch CheckWinner Action from the store, checks if played pawn causes a victory\n   * @param {Pawn} playedPawn pawn that was just played\n   */\n  private checkVictory(playedPawn: Pawn){\n    this.store.dispatch(new CheckWinner(playedPawn)).subscribe(store => {\n      if(store.game.game.winner){\n        this.openEndGameDialog(store.game.game.winner);\n      }\n    });\n  }\n\n  /**\n   * Shows the end game dialog\n   * @param {Player} winner player that played that last pawn and won\n   */\n  public openEndGameDialog(winner?: Player) {\n    const dialogRef = this.dialog.open(EndGameComponent, {\n      data: winner,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      switch (result) {\n        case 'quit':\n          this.router.navigate(['home']);\n          break;\n        case 'replay':\n          this.resetGame()\n          break;\n      \n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Animate a falling pawn in the column played, falling up to the row where the pawn will fall\n   * @param {number} column column played\n   * @param {number} row row where the animation ends\n   * @param {Player} player player that played to determine the color of the pawn to animate\n   */\n  animateFallingPawn(column: number, row: number, player: Player){\n    const pawnColor = player.id === 0 ? \"red\" : \"yellow\";\n    let pawnToAnimate: HTMLElement = document.getElementsByClassName(`falling-${pawnColor}-${column}`)[0] as HTMLElement;\n    pawnToAnimate.classList.add(\"show\");\n    setTimeout(() => {\n      pawnToAnimate.style.top = `${((this.gridY.length - 1 - row) * 100)}%`;\n    }, 10);\n    setTimeout(() => {\n      pawnToAnimate.classList.remove(\"show\");\n      pawnToAnimate.style.top = \"0%\";\n    }, 140);\n    \n  }\n\n}\n\n    \n\n    \n        \n    {{ (game | async)!.turn!.name }} -->\n    \n        \n            \n                \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            \n                undo\n            \n        \n        \n            \n                sync\n            \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./game.component.scss\n                \n                .game{\n    max-width: 88vh;\n    margin: auto;\n\n    &__grid-container{\n        margin: 20px;\n        display: grid;\n        grid-template-columns: repeat(7, 1fr);\n        border: 12px solid #2867b2;\n        border-radius: 23px;\n\n        &--5{\n            grid-template-columns: repeat(5, 1fr);\n        }\n        &--7{\n            grid-template-columns: repeat(7, 1fr);\n        }\n        &--9{\n            grid-template-columns: repeat(9, 1fr);\n        }\n        &--11{\n            grid-template-columns: repeat(11, 1fr);\n        }\n        &--13{\n            grid-template-columns: repeat(13, 1fr);\n        }\n        &--15{\n            grid-template-columns: repeat(15, 1fr);\n        }\n    }\n}\n\n.game--fullscreen{\n    max-width: 100%;\n    margin: auto;\n}\n\n.game--almost-fullscreen{\n    max-width: 88vh;\n    margin: auto;\n}\n\n.game__players--player-two{\n    text-align: right;\n}\n\n.game__action{\n    text-align: center;\n}\n\n.game__actions{\n    margin: 20px 0px;\n    padding-bottom: 30px;\n}\n\n.case__animated{\n    width: 90%;\n    height: 90%;\n    position: absolute;\n    top: 0;\n    border-radius: 50px;\n    z-index: 50;\n    transform: translateX(-50%);\n    left: 50%;\n    opacity: 1;\n    transition: top .15s;\n    display: none;\n\n    &.show{\n        display: block;\n    }\n\n    &--red{\n        background: #f4433b;\n        box-shadow: inset 10px 10px 10px #72211d, inset -10px -10px 10px #72211d;\n    }\n\n    &--yellow{\n        background: #f4e43b;\n        box-shadow: inset 10px 10px 10px #6b641a, inset -10px -10px 10px #6b641a;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ (game | async)!.turn!.name }} -->                                                                                                                                                                        undo                                                        sync                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_declarations\n\n\n\ncluster_GameModule_imports\n\n\n\n\nCaseComponent\n\nCaseComponent\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nCaseComponent->GameModule\n\n\n\n\n\nEndGameComponent\n\nEndGameComponent\n\nGameModule -->\n\nEndGameComponent->GameModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nGameModule -->\n\nGameComponent->GameModule\n\n\n\n\n\nGameRoutingModule\n\nGameRoutingModule\n\nGameModule -->\n\nGameRoutingModule->GameModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nGameModule -->\n\nMaterialModule->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaseComponent\n                        \n                        \n                            EndGameComponent\n                        \n                        \n                            GameComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GameRoutingModule } from './game-routing.module';\nimport { GameComponent } from './game.component';\nimport { MaterialModule } from '../material/material.module';\nimport { CaseComponent } from './case/case.component';\nimport { EndGameComponent } from './dialogs/end-game/end-game.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n@NgModule({\n  declarations: [\n    GameComponent,\n    CaseComponent,\n    EndGameComponent\n  ],\n  imports: [\n    CommonModule,\n    GameRoutingModule,\n    MaterialModule,\n    FlexLayoutModule\n  ]\n})\nexport class GameModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameRoutingModule.html":{"url":"modules/GameRoutingModule.html","title":"module - GameRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GameRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/game/game-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameComponent } from './game.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GameComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GameRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameState.html":{"url":"injectables/GameState.html","title":"injectable - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/game/game.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Game State\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                victoryService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelLastMove\n                            \n                            \n                                checkWinner\n                            \n                            \n                                    Static\n                                getColumns\n                            \n                            \n                                    Static\n                                getGame\n                            \n                            \n                                    Static\n                                getRows\n                            \n                            \n                                initGame\n                            \n                            \n                                playPawn\n                            \n                            \n                                resetGame\n                            \n                            \n                                setColumns\n                            \n                            \n                                setRows\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelLastMove\n                        \n                    \n                \n            \n            \n                \ncancelLastMove(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CancelLastMove)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:136\n                \n            \n\n\n            \n                \n                    Removes last played pawn if there is at least one pawn in the game\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkWinner\n                        \n                    \n                \n            \n            \n                \ncheckWinner(undefined: StateContext, undefined: CheckWinner)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CheckWinner)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:176\n                \n            \n\n\n            \n                \n                    Uses Victory service to check if 4 pawns are aligned, update state if there's a winner\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            CheckWinner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColumns\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumns(state: GameStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:67\n                \n            \n\n\n            \n                \n                    Returns columns\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                GameStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(state: GameStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:51\n                \n            \n\n\n            \n                \n                    Returns game state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                GameStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getRows\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRows(state: GameStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:59\n                \n            \n\n\n            \n                \n                    Returns rows\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                GameStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initGame\n                        \n                    \n                \n            \n            \n                \ninitGame(undefined: StateContext, undefined: GameInit)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(GameInit)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:75\n                \n            \n\n\n            \n                \n                    Initialize the game, set player turn to player one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                GameInit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playPawn\n                        \n                    \n                \n            \n            \n                \nplayPawn(undefined: StateContext, undefined: PlayPawn)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(PlayPawn)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:156\n                \n            \n\n\n            \n                \n                    Add a pawn to the state pawn array if column played isn't full\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                PlayPawn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGame\n                        \n                    \n                \n            \n            \n                \nresetGame(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(GameReset)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:121\n                \n            \n\n\n            \n                \n                    Reset the game, set player turn to red and reset the pawn array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColumns\n                        \n                    \n                \n            \n            \n                \nsetColumns(undefined: StateContext, undefined: SetColumns)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetColumns)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:105\n                \n            \n\n\n            \n                \n                    Sets selected columns in the game state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            SetColumns\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRows\n                        \n                    \n                \n            \n            \n                \nsetRows(undefined: StateContext, undefined: SetRows)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetRows)\n                \n            \n\n            \n                \n                    Defined in src/app/store/game/game.state.ts:89\n                \n            \n\n\n            \n                \n                    Sets selected rows in the game state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            SetRows\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        victoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VictoryCheckService\n\n                    \n                \n                \n                    \n                        Default value : new VictoryCheckService()\n                    \n                \n                    \n                        \n                                Defined in src/app/store/game/game.state.ts:45\n                        \n                    \n\n            \n                \n                    Victory Service, has all the methods to check if 4 pawns are aligned\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { Game } from 'src/app/models/game';\nimport { CheckWinner, GameInit, PlayPawn, GameReset, CancelLastMove, SetRows, SetColumns } from './game.actions';\nimport { VictoryCheckService } from '../services/victory-check.service';\nimport { Player } from 'src/app/models/player';\n\n/**\n * Game State Model\n */\nexport class GameStateModel {\n    /**\n     * Game state, contains the two players, the columns and rows number and an array of the pawns played\n     */\n    game: Game = {\n        player1: {id: 0, name: \"Joueur 1\"},\n        player2: {id: 1, name: \"Joueur 2\"},\n        rows: 6,\n        columns: 7,\n        pawns: []\n    };\n}\n\n/**\n * Game State\n */\n@State({\n    name: 'game',\n    defaults: {\n        game: {\n            player1: {id: 0, name: \"Joueur 1\"},\n            player2: {id: 1, name: \"Joueur 2\"},\n            rows: 6,\n            columns: 7,\n            pawns: []\n        }\n    }\n})\n@Injectable()\nexport class GameState {\n\n    /**\n     * Victory Service, has all the methods to check if 4 pawns are aligned\n     */\n    private victoryService: VictoryCheckService = new VictoryCheckService();\n\n    /**\n     * Returns game state\n     */\n    @Selector()\n    static getGame(state: GameStateModel) {\n        return state.game;\n    }\n\n    /**\n     * Returns rows\n     */\n    @Selector()\n    static getRows(state: GameStateModel) {\n        return state.game.rows;\n    }\n\n    /**\n     * Returns columns\n     */\n    @Selector()\n    static getColumns(state: GameStateModel) {\n        return state.game.columns;\n    }\n\n    /**\n     * Initialize the game, set player turn to player one\n     */\n    @Action(GameInit)\n    initGame({getState, patchState }: StateContext, {payload}: GameInit) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...payload,\n                turn: state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Sets selected rows in the game state\n     */\n    @Action(SetRows)\n    setRows({getState, patchState }: StateContext, {rows}: SetRows) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...state.game,\n                rows: rows,\n                pawns: [],\n                turn: state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Sets selected columns in the game state\n     */\n    @Action(SetColumns)\n    setColumns({getState, patchState }: StateContext, {columns}: SetColumns) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...state.game,\n                columns: columns,\n                pawns: [],\n                turn: state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Reset the game, set player turn to red and reset the pawn array\n     */\n    @Action(GameReset)\n    resetGame({getState, patchState }: StateContext) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...state.game,\n                pawns: [],\n                turn: state.game.player1,\n            }\n        });\n    }\n    \n    /**\n     * Removes last played pawn if there is at least one pawn in the game\n     */\n    @Action(CancelLastMove)\n    cancelLastMove({getState, patchState }: StateContext) {\n        const state = getState();\n        const truncatedPawns = state.game.pawns.slice(0,-1);\n        // check : there is at least one pawn \n        if(state.game.pawns.length === 0){\n            throw new Error($localize`🧐 Aucun pion en jeu !`);\n        }\n        patchState({\n            ...state, game: {\n                ...state.game,\n                pawns: truncatedPawns,\n                turn: state.game.turn?.id == state.game.player1.id ? state.game.player2 : state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Add a pawn to the state pawn array if column played isn't full\n     */\n    @Action(PlayPawn)\n    playPawn({getState, patchState }: StateContext, {pawn}: PlayPawn) {\n        const state = getState();\n        const pawnsList = [...state.game.pawns, pawn]\n        // check : column is full already\n        if(pawn.y >= state.game.rows){\n            throw new Error($localize`🧐 La colonne est pleine !`);\n        }\n        patchState({\n            ...state, game: {\n                ...state.game,\n                turn: state.game.turn?.id == state.game.player1.id ? state.game.player2 : state.game.player1,\n                pawns: pawnsList\n            }\n        });\n    }\n\n    /**\n     * Uses Victory service to check if 4 pawns are aligned, update state if there's a winner\n     */\n    @Action(CheckWinner)\n    checkWinner({getState, patchState }: StateContext, {pawnPlayed}: CheckWinner) {\n        const state = getState();\n        let winner!: Player;\n        const linePlayed = pawnPlayed.y;\n        const columnPlayed = pawnPlayed.x;\n\n        // check pour une ligne verticale\n        if(this.victoryService.verticalCheck(state.game, columnPlayed, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        // check pour une ligne horizontale\n        if(this.victoryService.horizontalCheck(state.game, linePlayed, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        // check pour une ligne diagonale à droite\n        if(this.victoryService.diagonalRightCheck(state.game, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        // check pour une ligne diagonale à gauche\n        if(this.victoryService.diagonalLeftCheck(state.game, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        patchState({\n            ...state, game: {\n                ...state.game,\n                winner: winner\n            }\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameStateModel.html":{"url":"classes/GameStateModel.html","title":"class - GameStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/game/game.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Game State Model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                \n                    \n                        Default value : {\n        player1: {id: 0, name: \"Joueur 1\"},\n        player2: {id: 1, name: \"Joueur 2\"},\n        rows: 6,\n        columns: 7,\n        pawns: []\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/store/game/game.state.ts:15\n                        \n                    \n\n            \n                \n                    Game state, contains the two players, the columns and rows number and an array of the pawns played\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { Game } from 'src/app/models/game';\nimport { CheckWinner, GameInit, PlayPawn, GameReset, CancelLastMove, SetRows, SetColumns } from './game.actions';\nimport { VictoryCheckService } from '../services/victory-check.service';\nimport { Player } from 'src/app/models/player';\n\n/**\n * Game State Model\n */\nexport class GameStateModel {\n    /**\n     * Game state, contains the two players, the columns and rows number and an array of the pawns played\n     */\n    game: Game = {\n        player1: {id: 0, name: \"Joueur 1\"},\n        player2: {id: 1, name: \"Joueur 2\"},\n        rows: 6,\n        columns: 7,\n        pawns: []\n    };\n}\n\n/**\n * Game State\n */\n@State({\n    name: 'game',\n    defaults: {\n        game: {\n            player1: {id: 0, name: \"Joueur 1\"},\n            player2: {id: 1, name: \"Joueur 2\"},\n            rows: 6,\n            columns: 7,\n            pawns: []\n        }\n    }\n})\n@Injectable()\nexport class GameState {\n\n    /**\n     * Victory Service, has all the methods to check if 4 pawns are aligned\n     */\n    private victoryService: VictoryCheckService = new VictoryCheckService();\n\n    /**\n     * Returns game state\n     */\n    @Selector()\n    static getGame(state: GameStateModel) {\n        return state.game;\n    }\n\n    /**\n     * Returns rows\n     */\n    @Selector()\n    static getRows(state: GameStateModel) {\n        return state.game.rows;\n    }\n\n    /**\n     * Returns columns\n     */\n    @Selector()\n    static getColumns(state: GameStateModel) {\n        return state.game.columns;\n    }\n\n    /**\n     * Initialize the game, set player turn to player one\n     */\n    @Action(GameInit)\n    initGame({getState, patchState }: StateContext, {payload}: GameInit) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...payload,\n                turn: state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Sets selected rows in the game state\n     */\n    @Action(SetRows)\n    setRows({getState, patchState }: StateContext, {rows}: SetRows) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...state.game,\n                rows: rows,\n                pawns: [],\n                turn: state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Sets selected columns in the game state\n     */\n    @Action(SetColumns)\n    setColumns({getState, patchState }: StateContext, {columns}: SetColumns) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...state.game,\n                columns: columns,\n                pawns: [],\n                turn: state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Reset the game, set player turn to red and reset the pawn array\n     */\n    @Action(GameReset)\n    resetGame({getState, patchState }: StateContext) {\n        const state = getState();\n        patchState({\n            ...state, game: {\n                ...state.game,\n                pawns: [],\n                turn: state.game.player1,\n            }\n        });\n    }\n    \n    /**\n     * Removes last played pawn if there is at least one pawn in the game\n     */\n    @Action(CancelLastMove)\n    cancelLastMove({getState, patchState }: StateContext) {\n        const state = getState();\n        const truncatedPawns = state.game.pawns.slice(0,-1);\n        // check : there is at least one pawn \n        if(state.game.pawns.length === 0){\n            throw new Error($localize`🧐 Aucun pion en jeu !`);\n        }\n        patchState({\n            ...state, game: {\n                ...state.game,\n                pawns: truncatedPawns,\n                turn: state.game.turn?.id == state.game.player1.id ? state.game.player2 : state.game.player1,\n            }\n        });\n    }\n\n    /**\n     * Add a pawn to the state pawn array if column played isn't full\n     */\n    @Action(PlayPawn)\n    playPawn({getState, patchState }: StateContext, {pawn}: PlayPawn) {\n        const state = getState();\n        const pawnsList = [...state.game.pawns, pawn]\n        // check : column is full already\n        if(pawn.y >= state.game.rows){\n            throw new Error($localize`🧐 La colonne est pleine !`);\n        }\n        patchState({\n            ...state, game: {\n                ...state.game,\n                turn: state.game.turn?.id == state.game.player1.id ? state.game.player2 : state.game.player1,\n                pawns: pawnsList\n            }\n        });\n    }\n\n    /**\n     * Uses Victory service to check if 4 pawns are aligned, update state if there's a winner\n     */\n    @Action(CheckWinner)\n    checkWinner({getState, patchState }: StateContext, {pawnPlayed}: CheckWinner) {\n        const state = getState();\n        let winner!: Player;\n        const linePlayed = pawnPlayed.y;\n        const columnPlayed = pawnPlayed.x;\n\n        // check pour une ligne verticale\n        if(this.victoryService.verticalCheck(state.game, columnPlayed, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        // check pour une ligne horizontale\n        if(this.victoryService.horizontalCheck(state.game, linePlayed, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        // check pour une ligne diagonale à droite\n        if(this.victoryService.diagonalRightCheck(state.game, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        // check pour une ligne diagonale à gauche\n        if(this.victoryService.diagonalLeftCheck(state.game, pawnPlayed)){\n            winner = pawnPlayed.player;\n        }\n\n        patchState({\n            ...state, game: {\n                ...state.game,\n                winner: winner\n            }\n        });\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        App header component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyDarkTheme\n                            \n                            \n                                toogleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyDarkTheme\n                        \n                    \n                \n            \n            \n                \napplyDarkTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/header/header.component.ts:49\n                \n            \n\n\n            \n                \n                    Applies selected theme in body tag , for global theming\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toogleTheme\n                        \n                    \n                \n            \n            \n                \ntoogleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/header/header.component.ts:41\n                \n            \n\n\n            \n                \n                    Toogle theme\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dark\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(ThemeState.getTheme)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/layout/header/header.component.ts:22\n                        \n                    \n\n            \n                \n                    Gets the theme set from the store\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { ToogleTheme } from '../../store/theme/theme.actions';\nimport { ThemeState } from '../../store/theme/theme.state';\n\n/**\n * App header component\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * Gets the theme set from the store\n   * @type {Observable}\n   */\n  @Select(ThemeState.getTheme) dark!: Observable;\n\n  /**\n   * @ignore\n   */\n  constructor(private store: Store) { \n\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.applyDarkTheme();\n  }\n\n  /**\n   * Toogle theme\n   */\n  toogleTheme() {\n    this.store.dispatch(new ToogleTheme());\n    this.applyDarkTheme();\n  }\n\n  /**\n   * Applies selected theme in body tag , for global theming\n   */\n  applyDarkTheme(){\n    this.dark.pipe(take(1)).subscribe(isDark => {\n      if(isDark){\n        document.body.classList.add(\"dark-theme\");\n      }\n      else{\n        \n        document.body.classList.remove(\"dark-theme\");\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    Puissance 4\n\n    \n\n    brightness_5\n    \n    \n    dark_mode\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host{\n    position: sticky;\n    top: 0;\n\n    .header__title{\n        font-family: \"Train One\";\n        text-shadow: 2px 2px 6px #999;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Puissance 4        brightness_5            dark_mode'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomepageComponent.html":{"url":"components/HomepageComponent.html","title":"component - HomepageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomepageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/homepage/homepage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Homepage component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-homepage\n            \n\n            \n                styleUrls\n                ./homepage.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./homepage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToExternalURL\n                            \n                            \n                                setColumns\n                            \n                            \n                                setRows\n                            \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToExternalURL\n                        \n                    \n                \n            \n            \n                \nnavigateToExternalURL(link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/homepage/homepage.component.ts:64\n                \n            \n\n\n            \n                \n                    Navigate to an external link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        link to navigate to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColumns\n                        \n                    \n                \n            \n            \n                \nsetColumns(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/homepage/homepage.component.ts:49\n                \n            \n\n\n            \n                \n                    Sets the columns in the store from the column slider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRows\n                        \n                    \n                \n            \n            \n                \nsetRows(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/homepage/homepage.component.ts:56\n                \n            \n\n\n            \n                \n                    Sets the rows in the store from the row slider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/homepage/homepage.component.ts:41\n                \n            \n\n\n            \n                \n                    Resets the game and navigate to the game page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(GameState.getColumns)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/homepage/homepage.component.ts:29\n                        \n                    \n\n            \n                \n                    Columns from the store to set in the slider when loading the component\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    [object Object]\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(GameState.getRows)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/homepage/homepage.component.ts:23\n                        \n                    \n\n            \n                \n                    Rows from the store to set in the slider when loading the component\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    [object Object]\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { GameReset, SetColumns, SetRows } from '../store/game/game.actions';\nimport { GameState } from '../store/game/game.state';\n\n\n/**\n * Homepage component\n */\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent {\n\n  /**\n   * Rows from the store to set in the slider when loading the component\n   * @param {Observable} \n   */\n  @Select(GameState.getRows) rows!: Observable;\n\n  /**\n   * Columns from the store to set in the slider when loading the component\n   * @param {Observable} \n   */\n  @Select(GameState.getColumns) columns!: Observable;\n\n  /**\n   * @ignore\n   */\n  constructor(\n    private store: Store,\n    private router: Router) { }\n\n    /**\n   * Resets the game and navigate to the game page\n   */\n  startGame(){\n    this.store.dispatch(new GameReset());\n    this.router.navigate(['game']);\n  }\n\n  /**\n   * Sets the columns in the store from the column slider\n   */\n  setColumns(event: any){\n    this.store.dispatch(new SetColumns(event.value));\n  }\n\n  /**\n   * Sets the rows in the store from the row slider\n   */\n  setRows(event: any){\n    this.store.dispatch(new SetRows(event.value));\n  }\n\n  /**\n   * Navigate to an external link\n   * @param {string} link link to navigate to\n   */\n  navigateToExternalURL(link: string){\n    window.location.href = link;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            \n                Colonnes :\n                \n            \n\n            \n                Lignes :\n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n            \n            Jouer\n        \n    \n\n\n    \n\n    \n                \n                    ./homepage.component.scss\n                \n                .homepage {\n    height: 100%;\n\n    &__title{\n        font-family: \"Train One\";\n        font-size: 3rem;\n        text-shadow: 2px 2px 6px #999;\n        margin-bottom: 10%;\n\n        &--small{\n            font-size: 2rem;\n            text-shadow: 2px 2px 6px #999;\n        }\n    }\n\n    &__image{\n        max-width: 80%;\n        max-height: 90%;\n    }\n\n    &__play-button{\n        font-size: 1.2rem;\n        padding: 5px 30px;\n        margin-top: 30px;\n    }\n\n    &__settings-title{\n        margin-bottom: 20px;\n    }\n\n    &__settings-item{\n        margin: 2% 20%;\n\n        .mat-slider-horizontal{\n            width: 100%;\n        }\n\n        ::ng-deep {\n            .mat-slider-thumb-label {\n                transform: rotate(45deg) !important;\n                border-radius: 50% 50% 0 !important;\n            }\n            \n            .mat-slider-thumb {\n                transform: scale(0) !important;\n            }\n            \n            .mat-slider-thumb-label-text {\n                opacity: 1 !important;\n            }\n        }\n    }\n\n    &__flag{\n        width: 100%;\n        box-shadow: 2px 2px 2px #dcdcdc;\n        border-radius: 50px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            Colonnes :                                                        Lignes :                                                                                                                                                                                                                                                                                                            Jouer            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomepageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomepageModule.html":{"url":"modules/HomepageModule.html","title":"module - HomepageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomepageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomepageModule\n\n\n\ncluster_HomepageModule_declarations\n\n\n\ncluster_HomepageModule_imports\n\n\n\n\nHomepageComponent\n\nHomepageComponent\n\n\n\nHomepageModule\n\nHomepageModule\n\nHomepageModule -->\n\nHomepageComponent->HomepageModule\n\n\n\n\n\nHomepageRoutingModule\n\nHomepageRoutingModule\n\nHomepageModule -->\n\nHomepageRoutingModule->HomepageModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nHomepageModule -->\n\nMaterialModule->HomepageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/homepage/homepage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomepageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomepageRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomepageRoutingModule } from './homepage-routing.module';\nimport { HomepageComponent } from './homepage.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    HomepageComponent\n  ],\n  imports: [\n    CommonModule,\n    HomepageRoutingModule,\n    FlexLayoutModule,\n    MaterialModule,\n    FormsModule\n  ]\n})\nexport class HomepageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomepageRoutingModule.html":{"url":"modules/HomepageRoutingModule.html","title":"module - HomepageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomepageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/homepage/homepage-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomepageComponent } from './homepage.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomepageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomepageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        404 component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 component\n */\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent  {\n\n}\n\n    \n\n    \n        \n     Oups !\n    La page n'existe pas !\n    \n    \n    Revenir à l'accueil\n\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                .not-found{\n\n    text-align: center;\n    margin-top: 50px;\n\n    &__title{\n        font-size: 2rem;\n        font-weight: bold;\n    }\n\n    &__image{\n        max-width: 80%;\n        max-height: 40vh;\n    }\n\n    &__action{\n        margin-top: 100px;\n        padding: 5px 30px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Oups !    La page n\\'existe pas !            Revenir à l\\'accueil'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CaseComponent', 'selector': 'app-case'},{'name': 'EndGameComponent', 'selector': 'app-end-game'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pawn.html":{"url":"interfaces/Pawn.html","title":"interface - Pawn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pawn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/pawn.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a pawn\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isInWinningLine\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isInWinningLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isInWinningLine:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    true if the pawn is in a winning line, for display purpose\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    player that played the pawn\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate of the pawn\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate of the pawn\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Player } from \"./player\";\n\n/**\n * Represents a pawn\n */\nexport interface Pawn{\n    /**\n     * x coordinate of the pawn\n     */\n    x: number;\n\n    /**\n     * y coordinate of the pawn\n     */\n    y: number;\n\n    /**\n     * player that played the pawn\n     */\n    player: Player;\n\n    /**\n     * true if the pawn is in a winning line, for display purpose\n     */\n    isInWinningLine?: false;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/player.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a player\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    player id ( 0 for player one, 1 for player 2)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    player name (not used for now)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Player{\n    /**\n     * player id ( 0 for player one, 1 for player 2)\n     */\n    id: number;\n\n    /**\n     * player name (not used for now)\n     */\n    name: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeState.html":{"url":"injectables/ThemeState.html","title":"injectable - ThemeState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/theme/theme.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Theme state\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getTheme\n                            \n                            \n                                toogleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheme(state: ThemeStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/store/theme/theme.state.ts:31\n                \n            \n\n\n            \n                \n                    Retrieves the theme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ThemeStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toogleTheme\n                        \n                    \n                \n            \n            \n                \ntoogleTheme(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ToogleTheme)\n                \n            \n\n            \n                \n                    Defined in src/app/store/theme/theme.state.ts:39\n                \n            \n\n\n            \n                \n                    Sets the theme in the state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { ToogleTheme } from './theme.actions';\n\n/**\n * Theme state model\n */\nexport class ThemeStateModel {\n    /**\n     * true if dark theme is selected\n     */\n    dark: boolean = false;\n}\n\n/**\n * Theme state\n */\n@State({\n    name: 'theme',\n    defaults: {\n        dark: false\n    }\n})\n@Injectable()\nexport class ThemeState {\n\n    /**\n     * Retrieves the theme\n     */\n    @Selector()\n    static getTheme(state: ThemeStateModel) {\n        return state.dark;\n    }\n\n    /**\n     * Sets the theme in the state\n     */\n    @Action(ToogleTheme)\n    toogleTheme({getState, patchState }: StateContext) {\n        const state = getState();\n        patchState({\n            ...state, dark: !state.dark\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThemeStateModel.html":{"url":"classes/ThemeStateModel.html","title":"class - ThemeStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThemeStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/theme/theme.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Theme state model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/store/theme/theme.state.ts:12\n                        \n                    \n\n            \n                \n                    true if dark theme is selected\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { ToogleTheme } from './theme.actions';\n\n/**\n * Theme state model\n */\nexport class ThemeStateModel {\n    /**\n     * true if dark theme is selected\n     */\n    dark: boolean = false;\n}\n\n/**\n * Theme state\n */\n@State({\n    name: 'theme',\n    defaults: {\n        dark: false\n    }\n})\n@Injectable()\nexport class ThemeState {\n\n    /**\n     * Retrieves the theme\n     */\n    @Selector()\n    static getTheme(state: ThemeStateModel) {\n        return state.dark;\n    }\n\n    /**\n     * Sets the theme in the state\n     */\n    @Action(ToogleTheme)\n    toogleTheme({getState, patchState }: StateContext) {\n        const state = getState();\n        patchState({\n            ...state, dark: !state.dark\n        });\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VictoryCheckService.html":{"url":"injectables/VictoryCheckService.html","title":"injectable - VictoryCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VictoryCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/services/victory-check.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide methods to check if 4 pawns are aligned\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                diagonalLeftCheck\n                            \n                            \n                                    Public\n                                diagonalRightCheck\n                            \n                            \n                                    Public\n                                horizontalCheck\n                            \n                            \n                                    Public\n                                verticalCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        diagonalLeftCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    diagonalLeftCheck(game: Game, pawnPlayed: Pawn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/services/victory-check.service.ts:101\n                \n            \n\n\n            \n                \n                    Check if 4 pawns are aligned diagonally in the last cell played, from bottom left to up right\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pawnPlayed\n                                    \n                                                Pawn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        diagonalRightCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    diagonalRightCheck(game: Game, pawnPlayed: Pawn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/services/victory-check.service.ts:72\n                \n            \n\n\n            \n                \n                    Check if 4 pawns are aligned diagonally in the last cell played, from bottom right to up left\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pawnPlayed\n                                    \n                                                Pawn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        horizontalCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    horizontalCheck(game: Game, rowPlayed: number, pawnPlayed: Pawn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/services/victory-check.service.ts:44\n                \n            \n\n\n            \n                \n                    Check if 4 pawns are aligned horizontally in the last row played\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowPlayed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pawnPlayed\n                                    \n                                                Pawn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verticalCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    verticalCheck(game: Game, columnPlayed: number, pawnPlayed: Pawn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/services/victory-check.service.ts:16\n                \n            \n\n\n            \n                \n                    Check if 4 pawns are aligned vertically in the last column played\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnPlayed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pawnPlayed\n                                    \n                                                Pawn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Game } from 'src/app/models/game';\nimport { Pawn } from 'src/app/models/pawn';\n\n/**\n * Provide methods to check if 4 pawns are aligned\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class VictoryCheckService {\n\n  /**\n   * Check if 4 pawns are aligned vertically in the last column played\n   */\n  public verticalCheck(game: Game, columnPlayed: number, pawnPlayed: Pawn): boolean{\n\n    let won: boolean = false;\n\n    // On récupère les pions de la colonne jouée qui appartiennent au joueur\n    let playerColumn = game.pawns.filter(p => (p.x === columnPlayed && p.player.id === pawnPlayed.player.id));\n    // On ordonne le tableau\n    playerColumn = playerColumn.sort((a,b) => (a.y - b.y));\n    // On check si on a 4 pions alignés\n    let alignedPawns: number = 1;\n    playerColumn.map((pawn, index, pawnList) => {\n        if(pawn.y === pawnList[index - 1]?.y + 1 ) {\n            alignedPawns++;\n        }\n        else alignedPawns = 1;\n\n        if(alignedPawns > 3) {\n          console.info(pawnPlayed.player.name + \" a aligné 4 pions verticalement! 🎉\")\n          won = true;\n        }\n    });\n\n    return won;\n  }\n\n  /**\n   * Check if 4 pawns are aligned horizontally in the last row played\n   */\n  public horizontalCheck(game: Game, rowPlayed: number, pawnPlayed: Pawn): boolean{\n\n    let won: boolean = false;\n\n    // On récupère les pions de la ligne jouée qui appartiennent au joueur\n    let playerRow = game.pawns.filter(p => (p.y === rowPlayed && p.player.id === pawnPlayed.player.id));\n    // On ordonne le tableau\n    playerRow = playerRow.sort((a,b) => (a.x - b.x));\n    // On check si on a 4 pions alignés\n    let alignedPawns: number = 1;\n    playerRow.map((pawn, index, pawnList) => {\n        if(pawn.x === pawnList[index - 1]?.x + 1 ) {\n            alignedPawns++;\n        }\n        else alignedPawns = 1;\n\n        if(alignedPawns > 3) {\n          console.info(pawnPlayed.player.name + \" a aligné 4 pions horizontalement! 🎉\")\n          won = true;\n        }\n    });\n\n    return won;\n  }\n\n  /**\n   * Check if 4 pawns are aligned diagonally in the last cell played, from bottom right to up left\n   */\n  public diagonalRightCheck(game: Game, pawnPlayed: Pawn): boolean{\n\n    let won: boolean = false;\n\n    // On récupère tous les pions du joueur dans la diagonale droite \n    let playerPawns = game.pawns.filter(p => (p.x + p.y === pawnPlayed.x + pawnPlayed.y ) && (p.player.id === pawnPlayed.player.id));\n    \n    // On ordonne le tableau\n    playerPawns = playerPawns.sort((a,b) => (a.x - b.x));\n    // On check si on a 4 pions alignés\n    let alignedPawns: number = 1;\n    playerPawns.map((pawn, index, pawnList) => {\n        if((pawn.x === pawnList[index - 1]?.x + 1) && (pawn.y === pawnList[index - 1]?.y - 1)) {\n            alignedPawns++;\n        }\n        else alignedPawns = 1;\n\n        if(alignedPawns > 3) {\n          console.info(pawnPlayed.player.name + \" a aligné 4 pions en diagonale! 🎉\")\n          won = true;\n        }\n    });\n\n    return won;\n  }\n\n  /**\n   * Check if 4 pawns are aligned diagonally in the last cell played, from bottom left to up right\n   */\n  public diagonalLeftCheck(game: Game, pawnPlayed: Pawn): boolean{\n\n    let won: boolean = false;\n\n    // On récupère tous les pions du joueur dans la diagonale droite \n    let playerPawns = game.pawns.filter(p => (p.x - p.y === pawnPlayed.x - pawnPlayed.y ) && (p.player.id === pawnPlayed.player.id));\n    \n    // On ordonne le tableau\n    playerPawns = playerPawns.sort((a,b) => (a.x - b.x));\n    // On check si on a 4 pions alignés\n    let alignedPawns: number = 1;\n    playerPawns.map((pawn, index, pawnList) => {\n        if((pawn.x === pawnList[index - 1]?.x + 1) && (pawn.y === pawnList[index - 1]?.y + 1)) {\n            alignedPawns++;\n        }\n        else alignedPawns = 1;\n\n        if(alignedPawns > 3) {\n          console.info(pawnPlayed.player.name + \" a aligné 4 pions en diagonale! 🎉\")\n          won = true;\n        }\n    });\n\n    return won;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/game/case/case.component.ts\n            \n            component\n            CaseComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/game/dialogs/end-game/end-game.component.ts\n            \n            component\n            EndGameComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/homepage/homepage.component.ts\n            \n            component\n            HomepageComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/game.ts\n            \n            interface\n            Game\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/pawn.ts\n            \n            interface\n            Pawn\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/player.ts\n            \n            interface\n            Player\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/game/game.state.ts\n            \n            class\n            GameStateModel\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/store/game/game.state.ts\n            \n            injectable\n            GameState\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/store/services/victory-check.service.ts\n            \n            injectable\n            VictoryCheckService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/store/theme/theme.state.ts\n            \n            class\n            ThemeStateModel\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/store/theme/theme.state.ts\n            \n            injectable\n            ThemeState\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.1.0-\n        \n            @angular/cdk : ^12.1.3\n        \n            @angular/common : ~12.1.0-\n        \n            @angular/compiler : ~12.1.0-\n        \n            @angular/core : ~12.1.0-\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~12.1.0-\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ~12.1.0-\n        \n            @angular/platform-browser-dynamic : ~12.1.0-\n        \n            @angular/router : ~12.1.0-\n        \n            @angular/service-worker : ~12.1.0-\n        \n            @ngxs/storage-plugin : ^3.7.2\n        \n            @ngxs/store : ^3.7.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPuissance4\nTester l'appli:\nL'application est hebergée sur firebase, elle est dispo en ligne ici: https://puissance-4-6585f.web.app\nDocumentation:\nLa doc est faite avec compodoc / JSDoc et elle est hebergée sur firebase aussi, elle est dispo en ligne ici: https://puissance-4-documentation.web.appweb.app\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomepageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomepageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_declarations\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_HomepageModule\n\n\n\ncluster_HomepageModule_declarations\n\n\n\ncluster_HomepageModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nMaterialModule->GameModule\n\n\n\n\n\nHomepageModule\n\nHomepageModule\n\nHomepageModule -->\n\nMaterialModule->HomepageModule\n\n\n\n\n\nCaseComponent\n\nCaseComponent\n\nGameModule -->\n\nCaseComponent->GameModule\n\n\n\n\n\nEndGameComponent\n\nEndGameComponent\n\nGameModule -->\n\nEndGameComponent->GameModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nGameModule -->\n\nGameComponent->GameModule\n\n\n\n\n\nGameRoutingModule\n\nGameRoutingModule\n\nGameModule -->\n\nGameRoutingModule->GameModule\n\n\n\n\n\nHomepageComponent\n\nHomepageComponent\n\nHomepageModule -->\n\nHomepageComponent->HomepageModule\n\n\n\n\n\nHomepageRoutingModule\n\nHomepageRoutingModule\n\nHomepageModule -->\n\nHomepageRoutingModule->HomepageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
